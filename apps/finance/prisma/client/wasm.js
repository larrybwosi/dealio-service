
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  emailVerified: 'emailVerified',
  image: 'image',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires',
  username: 'username',
  activeOrganizationId: 'activeOrganizationId',
  displayUsername: 'displayUsername',
  referralCode: 'referralCode',
  referrerId: 'referrerId'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  logo: 'logo',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  customFields: 'customFields',
  email: 'email',
  phone: 'phone',
  address: 'address',
  defaultLocationId: 'defaultLocationId',
  defaultWarehouseId: 'defaultWarehouseId',
  expenseApprovalRequired: 'expenseApprovalRequired',
  expenseApprovalThreshold: 'expenseApprovalThreshold',
  expenseReceiptRequired: 'expenseReceiptRequired',
  expenseReceiptThreshold: 'expenseReceiptThreshold',
  activeExpenseWorkflowId: 'activeExpenseWorkflowId',
  defaultExpenseCurrency: 'defaultExpenseCurrency',
  expenseTagOptions: 'expenseTagOptions'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  userId: 'userId',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  phone: 'phone',
  email: 'email',
  address: 'address',
  age: 'age',
  tags: 'tags',
  cardId: 'cardId',
  isCheckedIn: 'isCheckedIn',
  lastCheckInTime: 'lastCheckInTime',
  currentCheckInLocationId: 'currentCheckInLocationId',
  currentAttendanceLogId: 'currentAttendanceLogId',
  isGuest: 'isGuest',
  guestExpiresAt: 'guestExpiresAt',
  status: 'status'
};

exports.Prisma.SystemUnitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  symbol: 'symbol',
  type: 'type'
};

exports.Prisma.UnitConversionScalarFieldEnum = {
  id: 'id',
  fromUnitId: 'fromUnitId',
  toUnitId: 'toUnitId',
  factor: 'factor'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  email: 'email',
  role: 'role',
  status: 'status',
  token: 'token',
  expiresAt: 'expiresAt',
  inviterId: 'inviterId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  channelId: 'channelId',
  isGuestInvite: 'isGuestInvite'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image',
  banner: 'banner',
  description: 'description',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  headId: 'headId',
  activeBudgetId: 'activeBudgetId',
  customFields: 'customFields'
};

exports.Prisma.BackupScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  fileUrl: 'fileUrl',
  fileSize: 'fileSize',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DepartmentMemberScalarFieldEnum = {
  id: 'id',
  departmentId: 'departmentId',
  memberId: 'memberId',
  role: 'role',
  canApproveExpenses: 'canApproveExpenses',
  canManageBudget: 'canManageBudget',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name',
  description: 'description',
  parentId: 'parentId',
  color: 'color',
  code: 'code',
  organizationId: 'organizationId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  sku: 'sku',
  barcode: 'barcode',
  categoryId: 'categoryId',
  isActive: 'isActive',
  imageUrls: 'imageUrls',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  pointsOnPurchase: 'pointsOnPurchase',
  width: 'width',
  height: 'height',
  length: 'length',
  dimensionUnit: 'dimensionUnit',
  weight: 'weight',
  weightUnit: 'weightUnit',
  volumetricWeight: 'volumetricWeight',
  brand: 'brand',
  rating: 'rating',
  lowStockThreshold: 'lowStockThreshold',
  isNew: 'isNew',
  detailedDescription: 'detailedDescription',
  tags: 'tags',
  isFeatured: 'isFeatured',
  defaultLocationId: 'defaultLocationId',
  loyaltyPointsOverride: 'loyaltyPointsOverride',
  organizationId: 'organizationId'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  productId: 'productId',
  name: 'name',
  sku: 'sku',
  barcode: 'barcode',
  attributes: 'attributes',
  isActive: 'isActive',
  reorderPoint: 'reorderPoint',
  reorderQty: 'reorderQty',
  lowStockAlert: 'lowStockAlert',
  buyingPrice: 'buyingPrice',
  wholesalePrice: 'wholesalePrice',
  retailPrice: 'retailPrice',
  isPopular: 'isPopular',
  isNew: 'isNew',
  promotionalPrice: 'promotionalPrice',
  pointsOnPurchase: 'pointsOnPurchase',
  loyaltyPointsOverride: 'loyaltyPointsOverride',
  baseUnitId: 'baseUnitId',
  stockingUnitId: 'stockingUnitId'
};

exports.Prisma.VariantSellingUnitScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  unitOfMeasureId: 'unitOfMeasureId',
  retailPrice: 'retailPrice',
  wholesalePrice: 'wholesalePrice'
};

exports.Prisma.SupplierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  type: 'type',
  website: 'website',
  taxId: 'taxId',
  registrationNumber: 'registrationNumber',
  currency: 'currency',
  categories: 'categories',
  customBadges: 'customBadges',
  riskLevel: 'riskLevel',
  primaryContact: 'primaryContact',
  phone: 'phone',
  email: 'email',
  street: 'street',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  paymentTerms: 'paymentTerms',
  leadTime: 'leadTime',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  customFields: 'customFields',
  organizationId: 'organizationId'
};

exports.Prisma.ProductSupplierScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  variantId: 'variantId',
  supplierId: 'supplierId',
  supplierSku: 'supplierSku',
  costPrice: 'costPrice',
  minimumOrderQuantity: 'minimumOrderQuantity',
  packagingUnit: 'packagingUnit',
  isPreferred: 'isPreferred',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  notes: 'notes',
  company: 'company',
  avatar: 'avatar',
  gender: 'gender',
  customerType: 'customerType',
  dateOfBirth: 'dateOfBirth',
  loyaltyPoints: 'loyaltyPoints',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById',
  updatedById: 'updatedById',
  creationType: 'creationType',
  loyaltyTierId: 'loyaltyTierId',
  organizationId: 'organizationId'
};

exports.Prisma.TaxScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  rate: 'rate',
  description: 'description',
  isDefault: 'isDefault',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AppliedTaxScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  taxId: 'taxId',
  taxAmount: 'taxAmount',
  createdAt: 'createdAt'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  saleNumber: 'saleNumber',
  customerId: 'customerId',
  memberId: 'memberId',
  saleDate: 'saleDate',
  totalAmount: 'totalAmount',
  discountAmount: 'discountAmount',
  taxAmount: 'taxAmount',
  finalAmount: 'finalAmount',
  amountReceived: 'amountReceived',
  change: 'change',
  paymentMethod: 'paymentMethod',
  paymentStatus: 'paymentStatus',
  locationId: 'locationId',
  notes: 'notes',
  cashDrawerId: 'cashDrawerId',
  receiptUrl: 'receiptUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.SaleItemScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  variantId: 'variantId',
  stockBatchId: 'stockBatchId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  unitCost: 'unitCost',
  discountAmount: 'discountAmount',
  taxRate: 'taxRate',
  taxAmount: 'taxAmount',
  totalAmount: 'totalAmount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  sellingUnitId: 'sellingUnitId'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  organizationId: 'organizationId',
  customerId: 'customerId',
  memberId: 'memberId',
  status: 'status',
  orderType: 'orderType',
  fulfillmentType: 'fulfillmentType',
  subTotal: 'subTotal',
  discountAmount: 'discountAmount',
  taxAmount: 'taxAmount',
  shippingAmount: 'shippingAmount',
  totalAmount: 'totalAmount',
  paymentMethod: 'paymentMethod',
  paymentStatus: 'paymentStatus',
  paymentTransactionId: 'paymentTransactionId',
  placedAt: 'placedAt',
  confirmedAt: 'confirmedAt',
  preparingAt: 'preparingAt',
  readyAt: 'readyAt',
  dispatchedAt: 'dispatchedAt',
  deliveredAt: 'deliveredAt',
  completedAt: 'completedAt',
  cancelledAt: 'cancelledAt',
  updatedAt: 'updatedAt',
  shippingAddress: 'shippingAddress',
  billingAddress: 'billingAddress',
  deliveryNotes: 'deliveryNotes',
  pickupLocationId: 'pickupLocationId',
  tableNumber: 'tableNumber',
  estimatedPreparationTime: 'estimatedPreparationTime',
  notes: 'notes',
  tags: 'tags',
  saleId: 'saleId'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  variantId: 'variantId',
  productName: 'productName',
  variantName: 'variantName',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  discountAmount: 'discountAmount',
  taxRate: 'taxRate',
  taxAmount: 'taxAmount',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AssistantScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  description: 'description',
  type: 'type',
  isActive: 'isActive',
  configuration: 'configuration',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AssistantMessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  isUser: 'isUser',
  createdAt: 'createdAt',
  channelId: 'channelId',
  memberId: 'memberId',
  assistantId: 'assistantId',
  metadata: 'metadata'
};

exports.Prisma.AssistantTaskScalarFieldEnum = {
  id: 'id',
  assistantId: 'assistantId',
  name: 'name',
  description: 'description',
  taskType: 'taskType',
  triggerType: 'triggerType',
  triggerConfiguration: 'triggerConfiguration',
  actionConfiguration: 'actionConfiguration',
  isActive: 'isActive',
  lastRunAt: 'lastRunAt',
  nextRunAt: 'nextRunAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AssistantLogScalarFieldEnum = {
  id: 'id',
  assistantId: 'assistantId',
  assistantTaskId: 'assistantTaskId',
  organizationId: 'organizationId',
  startedAt: 'startedAt',
  finishedAt: 'finishedAt',
  status: 'status',
  details: 'details',
  output: 'output',
  errorMessage: 'errorMessage'
};

exports.Prisma.PurchaseScalarFieldEnum = {
  id: 'id',
  purchaseNumber: 'purchaseNumber',
  supplierId: 'supplierId',
  memberId: 'memberId',
  orderDate: 'orderDate',
  expectedDate: 'expectedDate',
  receivedDate: 'receivedDate',
  totalAmount: 'totalAmount',
  paidAmount: 'paidAmount',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.PurchaseItemScalarFieldEnum = {
  id: 'id',
  purchaseId: 'purchaseId',
  variantId: 'variantId',
  orderedQuantity: 'orderedQuantity',
  receivedQuantity: 'receivedQuantity',
  unitCost: 'unitCost',
  totalCost: 'totalCost',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  orderedUnitId: 'orderedUnitId'
};

exports.Prisma.PurchasePaymentScalarFieldEnum = {
  id: 'id',
  purchaseId: 'purchaseId',
  memberId: 'memberId',
  paymentDate: 'paymentDate',
  amount: 'amount',
  paymentMethod: 'paymentMethod',
  reference: 'reference',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReturnScalarFieldEnum = {
  id: 'id',
  returnNumber: 'returnNumber',
  saleId: 'saleId',
  reason: 'reason',
  status: 'status',
  notes: 'notes',
  processedAt: 'processedAt',
  memberId: 'memberId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.ReturnItemScalarFieldEnum = {
  id: 'id',
  returnId: 'returnId',
  saleItemId: 'saleItemId',
  quantity: 'quantity',
  reason: 'reason',
  status: 'status',
  unitPrice: 'unitPrice',
  notes: 'notes'
};

exports.Prisma.InventoryLocationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  description: 'description',
  isActive: 'isActive',
  isDefault: 'isDefault',
  locationType: 'locationType',
  address: 'address',
  contact: 'contact',
  capacity: 'capacity',
  settings: 'settings',
  parentLocationId: 'parentLocationId',
  customFields: 'customFields',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  managerId: 'managerId',
  organizationId: 'organizationId'
};

exports.Prisma.StorageZoneScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  locationId: 'locationId',
  capacity: 'capacity',
  capacityUnit: 'capacityUnit',
  capacityUsed: 'capacityUsed',
  isActive: 'isActive',
  customFields: 'customFields',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.StorageUnitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  reference: 'reference',
  unitType: 'unitType',
  locationId: 'locationId',
  zoneId: 'zoneId',
  width: 'width',
  height: 'height',
  depth: 'depth',
  dimensionUnit: 'dimensionUnit',
  maxWeight: 'maxWeight',
  weightUnit: 'weightUnit',
  capacity: 'capacity',
  capacityUnit: 'capacityUnit',
  capacityUsed: 'capacityUsed',
  isActive: 'isActive',
  position: 'position',
  customFields: 'customFields',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.StoragePositionScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  storageUnitId: 'storageUnitId',
  width: 'width',
  height: 'height',
  depth: 'depth',
  dimensionUnit: 'dimensionUnit',
  maxWeight: 'maxWeight',
  weightUnit: 'weightUnit',
  isOccupied: 'isOccupied',
  customFields: 'customFields',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.StockBatchScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  batchNumber: 'batchNumber',
  purchaseItemId: 'purchaseItemId',
  locationId: 'locationId',
  storageUnitId: 'storageUnitId',
  positionId: 'positionId',
  initialQuantity: 'initialQuantity',
  currentQuantity: 'currentQuantity',
  purchasePrice: 'purchasePrice',
  expiryDate: 'expiryDate',
  receivedDate: 'receivedDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  spaceOccupied: 'spaceOccupied',
  spaceUnit: 'spaceUnit',
  organizationId: 'organizationId',
  supplierId: 'supplierId',
  landedCost: 'landedCost',
  batchSalePrice: 'batchSalePrice'
};

exports.Prisma.ProductVariantStockScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  variantId: 'variantId',
  locationId: 'locationId',
  currentStock: 'currentStock',
  reservedStock: 'reservedStock',
  availableStock: 'availableStock',
  reorderPoint: 'reorderPoint',
  reorderQty: 'reorderQty',
  lastUpdated: 'lastUpdated',
  organizationId: 'organizationId'
};

exports.Prisma.StockAdjustmentScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  stockBatchId: 'stockBatchId',
  locationId: 'locationId',
  memberId: 'memberId',
  quantity: 'quantity',
  reason: 'reason',
  notes: 'notes',
  adjustmentDate: 'adjustmentDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  referenceNumber: 'referenceNumber',
  organizationId: 'organizationId'
};

exports.Prisma.StockMovementScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  stockBatchId: 'stockBatchId',
  quantity: 'quantity',
  fromLocationId: 'fromLocationId',
  toLocationId: 'toLocationId',
  movementType: 'movementType',
  referenceId: 'referenceId',
  referenceType: 'referenceType',
  adjustmentId: 'adjustmentId',
  memberId: 'memberId',
  notes: 'notes',
  movementDate: 'movementDate',
  createdAt: 'createdAt',
  organizationId: 'organizationId'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  fileUrl: 'fileUrl',
  mimeType: 'mimeType',
  sizeBytes: 'sizeBytes',
  description: 'description',
  uploadedAt: 'uploadedAt',
  memberId: 'memberId',
  relatedTo: 'relatedTo',
  relatedId: 'relatedId',
  saleId: 'saleId',
  purchaseId: 'purchaseId',
  organizationId: 'organizationId',
  expenseId: 'expenseId',
  budgetId: 'budgetId',
  recurringExpenseId: 'recurringExpenseId'
};

exports.Prisma.CashDrawerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  memberId: 'memberId',
  openingAmount: 'openingAmount',
  closingAmount: 'closingAmount',
  expectedAmount: 'expectedAmount',
  discrepancy: 'discrepancy',
  notes: 'notes',
  openedAt: 'openedAt',
  closedAt: 'closedAt',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  memberId: 'memberId',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  description: 'description',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  performedAt: 'performedAt',
  expenseId: 'expenseId',
  budgetId: 'budgetId',
  recurringExpenseId: 'recurringExpenseId',
  expenseApprovalId: 'expenseApprovalId'
};

exports.Prisma.OrganizationSettingsScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  defaultCurrency: 'defaultCurrency',
  defaultTimezone: 'defaultTimezone',
  defaultTaxRate: 'defaultTaxRate',
  inventoryPolicy: 'inventoryPolicy',
  lowStockThreshold: 'lowStockThreshold',
  negativeStock: 'negativeStock',
  updatedAt: 'updatedAt',
  enableCapacityTracking: 'enableCapacityTracking',
  enforceSpatialConstraints: 'enforceSpatialConstraints',
  enableProductDimensions: 'enableProductDimensions',
  defaultMeasurementUnit: 'defaultMeasurementUnit',
  defaultDimensionUnit: 'defaultDimensionUnit',
  defaultWeightUnit: 'defaultWeightUnit',
  defaultTaxId: 'defaultTaxId',
  enableAutoCheckout: 'enableAutoCheckout',
  autoCheckoutTime: 'autoCheckoutTime'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  expenseNumber: 'expenseNumber',
  description: 'description',
  amount: 'amount',
  expenseDate: 'expenseDate',
  categoryId: 'categoryId',
  paymentMethod: 'paymentMethod',
  receiptUrl: 'receiptUrl',
  notes: 'notes',
  isReimbursable: 'isReimbursable',
  status: 'status',
  approvalDate: 'approvalDate',
  locationId: 'locationId',
  memberId: 'memberId',
  approverId: 'approverId',
  supplierId: 'supplierId',
  organizationId: 'organizationId',
  purchaseId: 'purchaseId',
  budgetId: 'budgetId',
  recurringExpenseId: 'recurringExpenseId',
  tags: 'tags',
  taxAmount: 'taxAmount',
  mileage: 'mileage',
  isBillable: 'isBillable'
};

exports.Prisma.ExpenseCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  code: 'code',
  color: 'color',
  isActive: 'isActive',
  requiresApproval: 'requiresApproval',
  defaultBudget: 'defaultBudget',
  organizationId: 'organizationId'
};

exports.Prisma.RecurringExpenseScalarFieldEnum = {
  id: 'id',
  description: 'description',
  amount: 'amount',
  categoryId: 'categoryId',
  paymentMethod: 'paymentMethod',
  frequency: 'frequency',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  nextDueDate: 'nextDueDate',
  supplierId: 'supplierId',
  organizationId: 'organizationId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExpenseApprovalScalarFieldEnum = {
  id: 'id',
  expenseId: 'expenseId',
  approverId: 'approverId',
  status: 'status',
  comments: 'comments',
  decisionDate: 'decisionDate',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalWorkflowScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalWorkflowStepScalarFieldEnum = {
  id: 'id',
  approvalWorkflowId: 'approvalWorkflowId',
  stepNumber: 'stepNumber',
  name: 'name',
  description: 'description',
  allConditionsMustMatch: 'allConditionsMustMatch',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalStepConditionScalarFieldEnum = {
  id: 'id',
  stepId: 'stepId',
  type: 'type',
  minAmount: 'minAmount',
  maxAmount: 'maxAmount',
  locationId: 'locationId',
  expenseCategoryId: 'expenseCategoryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalStepActionScalarFieldEnum = {
  id: 'id',
  stepId: 'stepId',
  type: 'type',
  approverRole: 'approverRole',
  specificMemberId: 'specificMemberId',
  approvalMode: 'approvalMode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BudgetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  amount: 'amount',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  isActive: 'isActive',
  locationId: 'locationId',
  organizationId: 'organizationId',
  createdById: 'createdById',
  departmentId: 'departmentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fiscalYear: 'fiscalYear',
  variance: 'variance'
};

exports.Prisma.BudgetReportScalarFieldEnum = {
  id: 'id',
  budgetId: 'budgetId',
  reportDate: 'reportDate',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  totalSpent: 'totalSpent',
  remaining: 'remaining',
  variance: 'variance',
  notes: 'notes',
  generatedById: 'generatedById'
};

exports.Prisma.BudgetAlertScalarFieldEnum = {
  id: 'id',
  budgetId: 'budgetId',
  threshold: 'threshold',
  recipients: 'recipients',
  isActive: 'isActive',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExecutionLogScalarFieldEnum = {
  id: 'id',
  executedAt: 'executedAt',
  status: 'status',
  details: 'details',
  result: 'result',
  errorMessage: 'errorMessage',
  organizationId: 'organizationId',
  recurringExpenseId: 'recurringExpenseId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  description: 'description',
  read: 'read',
  link: 'link',
  createdAt: 'createdAt',
  userId: 'userId',
  recipientEmail: 'recipientEmail',
  senderId: 'senderId',
  expenseUserId: 'expenseUserId',
  organizationId: 'organizationId',
  details: 'details'
};

exports.Prisma.MpesaPaymentRequestScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  memberId: 'memberId',
  checkoutRequestId: 'checkoutRequestId',
  merchantRequestId: 'merchantRequestId',
  amount: 'amount',
  phoneNumber: 'phoneNumber',
  reference: 'reference',
  status: 'status',
  resultCode: 'resultCode',
  resultDescription: 'resultDescription',
  mpesaReceiptNumber: 'mpesaReceiptNumber',
  transactionDate: 'transactionDate',
  saleData: 'saleData',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  saleNumber: 'saleNumber'
};

exports.Prisma.AttendanceLogScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  organizationId: 'organizationId',
  checkInTime: 'checkInTime',
  checkOutTime: 'checkOutTime',
  checkInLocationId: 'checkInLocationId',
  checkOutLocationId: 'checkOutLocationId',
  durationMinutes: 'durationMinutes',
  notes: 'notes',
  isAutoCheckout: 'isAutoCheckout',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApikeyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  start: 'start',
  prefix: 'prefix',
  key: 'key',
  userId: 'userId',
  refillInterval: 'refillInterval',
  refillAmount: 'refillAmount',
  lastRefillAt: 'lastRefillAt',
  enabled: 'enabled',
  rateLimitEnabled: 'rateLimitEnabled',
  rateLimitTimeWindow: 'rateLimitTimeWindow',
  rateLimitMax: 'rateLimitMax',
  requestCount: 'requestCount',
  remaining: 'remaining',
  lastRequest: 'lastRequest',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  permissions: 'permissions',
  metadata: 'metadata'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  impersonatedBy: 'impersonatedBy',
  activeOrganizationId: 'activeOrganizationId'
};

exports.Prisma.CustomRoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  organizationId: 'organizationId',
  permissions: 'permissions',
  isActive: 'isActive',
  isSystemRole: 'isSystemRole',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  permissions: 'permissions',
  usageCount: 'usageCount',
  createdAt: 'createdAt'
};

exports.Prisma.ChannelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  type: 'type',
  isGeneral: 'isGeneral',
  isPublic: 'isPublic',
  isAssistantChannel: 'isAssistantChannel',
  createdAt: 'createdAt',
  creatorId: 'creatorId',
  updatedAt: 'updatedAt',
  parentId: 'parentId',
  organizationId: 'organizationId',
  assistantId: 'assistantId'
};

exports.Prisma.ChannelMemberScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  channelId: 'channelId',
  joinedAt: 'joinedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  memberId: 'memberId',
  channelId: 'channelId',
  parentMessageId: 'parentMessageId'
};

exports.Prisma.ReactionScalarFieldEnum = {
  id: 'id',
  emoji: 'emoji',
  messageId: 'messageId',
  memberId: 'memberId',
  createdAt: 'createdAt'
};

exports.Prisma.ChatMessageAttachmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  type: 'type',
  size: 'size',
  messageId: 'messageId'
};

exports.Prisma.MentionScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  memberId: 'memberId'
};

exports.Prisma.HashtagScalarFieldEnum = {
  id: 'id',
  tag: 'tag'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  channelId: 'channelId'
};

exports.Prisma.ThreadLinkScalarFieldEnum = {
  id: 'id',
  sourceThreadId: 'sourceThreadId',
  targetThreadId: 'targetThreadId'
};

exports.Prisma.AccountTypeScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  class: 'class',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FinancialAccountScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  code: 'code',
  name: 'name',
  description: 'description',
  accountTypeId: 'accountTypeId',
  parentId: 'parentId',
  isActive: 'isActive',
  currencyCode: 'currencyCode',
  isControlAccount: 'isControlAccount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FiscalPeriodScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  code: 'code',
  startDate: 'startDate',
  endDate: 'endDate',
  status: 'status',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JournalScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  reference: 'reference',
  description: 'description',
  date: 'date',
  postingDate: 'postingDate',
  type: 'type',
  status: 'status',
  fiscalPeriodId: 'fiscalPeriodId',
  currencyCode: 'currencyCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.JournalEntryScalarFieldEnum = {
  id: 'id',
  journalId: 'journalId',
  accountId: 'accountId',
  amount: 'amount',
  type: 'type',
  description: 'description',
  lineNumber: 'lineNumber'
};

exports.Prisma.AccountReconciliationScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  statementDate: 'statementDate',
  statementBalance: 'statementBalance',
  bookBalance: 'bookBalance',
  status: 'status',
  reconciledBy: 'reconciledBy',
  reconciledAt: 'reconciledAt',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  type: 'type',
  data: 'data',
  summary: 'summary',
  startDate: 'startDate',
  endDate: 'endDate',
  generatedAt: 'generatedAt',
  generatedById: 'generatedById'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  dodoCustomerId: 'dodoCustomerId',
  dodoSubscriptionId: 'dodoSubscriptionId',
  dodoPriceId: 'dodoPriceId',
  dodoCurrentPeriodEnd: 'dodoCurrentPeriodEnd'
};

exports.Prisma.JwksScalarFieldEnum = {
  id: 'id',
  publicKey: 'publicKey',
  privateKey: 'privateKey',
  createdAt: 'createdAt'
};

exports.Prisma.ReferralProgramScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  referrerReward: 'referrerReward',
  refereeReward: 'refereeReward',
  rewardType: 'rewardType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  referrerId: 'referrerId',
  refereeId: 'refereeId',
  programId: 'programId',
  status: 'status',
  firstPurchaseMade: 'firstPurchaseMade',
  rewardApplied: 'rewardApplied',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LoyaltyPointsConfigScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  actionType: 'actionType',
  points: 'points',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LoyaltyProgramScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  name: 'name',
  pointsPerDollar: 'pointsPerDollar',
  redemptionRate: 'redemptionRate',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LoyaltyTierScalarFieldEnum = {
  id: 'id',
  programId: 'programId',
  name: 'name',
  minPoints: 'minPoints',
  pointMultiplier: 'pointMultiplier',
  benefits: 'benefits',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LoyaltyTransactionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  customerId: 'customerId',
  memberId: 'memberId',
  pointsChange: 'pointsChange',
  actionType: 'actionType',
  relatedSaleId: 'relatedSaleId',
  notes: 'notes',
  transactionDate: 'transactionDate',
  organizationId: 'organizationId'
};

exports.Prisma.DriverScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  memberId: 'memberId',
  availability: 'availability',
  currentLocation: 'currentLocation',
  phone: 'phone',
  vehicleId: 'vehicleId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  make: 'make',
  model: 'model',
  licensePlate: 'licensePlate',
  color: 'color',
  type: 'type',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DeliveryScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  orderId: 'orderId',
  driverId: 'driverId',
  status: 'status',
  pickupAddress: 'pickupAddress',
  deliveryAddress: 'deliveryAddress',
  assignedAt: 'assignedAt',
  pickedUpAt: 'pickedUpAt',
  deliveredAt: 'deliveredAt',
  estimatedDeliveryTime: 'estimatedDeliveryTime',
  deliveryFee: 'deliveryFee',
  driverNotes: 'driverNotes',
  customerNotes: 'customerNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  DEVELOPER: 'DEVELOPER',
  CLIENT: 'CLIENT',
  MEMBER: 'MEMBER',
  CUSTOMER: 'CUSTOMER'
};

exports.MemberRole = exports.$Enums.MemberRole = {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  EMPLOYEE: 'EMPLOYEE',
  CASHIER: 'CASHIER',
  REPORTER: 'REPORTER',
  CUSTOMER: 'CUSTOMER',
  GUEST: 'GUEST'
};

exports.UnitType = exports.$Enums.UnitType = {
  COUNT: 'COUNT',
  WEIGHT: 'WEIGHT',
  VOLUME: 'VOLUME',
  LENGTH: 'LENGTH',
  AREA: 'AREA',
  TIME: 'TIME',
  OTHER: 'OTHER'
};

exports.BackupStatus = exports.$Enums.BackupStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  RESTORING: 'RESTORING'
};

exports.DepartmentMemberRole = exports.$Enums.DepartmentMemberRole = {
  HEAD: 'HEAD',
  MANAGER: 'MANAGER',
  MEMBER: 'MEMBER',
  VIEWER: 'VIEWER'
};

exports.SupplierType = exports.$Enums.SupplierType = {
  manufacturer: 'manufacturer',
  distributor: 'distributor',
  wholesaler: 'wholesaler',
  service_provider: 'service_provider'
};

exports.RiskLevel = exports.$Enums.RiskLevel = {
  low: 'low',
  medium: 'medium',
  high: 'high'
};

exports.CustomerCreationType = exports.$Enums.CustomerCreationType = {
  MEMBER_CREATED: 'MEMBER_CREATED',
  ONLINE_REGISTRATION: 'ONLINE_REGISTRATION',
  IMPORTED: 'IMPORTED',
  API: 'API',
  GUEST: 'GUEST',
  OTHER: 'OTHER'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING_CONFIRMATION: 'PENDING_CONFIRMATION',
  CONFIRMED: 'CONFIRMED',
  PREPARING: 'PREPARING',
  READY_FOR_PICKUP: 'READY_FOR_PICKUP',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  FAILED: 'FAILED',
  ON_HOLD: 'ON_HOLD'
};

exports.OrderType = exports.$Enums.OrderType = {
  RETAIL_SALE: 'RETAIL_SALE',
  ONLINE_ORDER: 'ONLINE_ORDER',
  RESTAURANT_DINE_IN: 'RESTAURANT_DINE_IN',
  RESTAURANT_TAKEOUT: 'RESTAURANT_TAKEOUT',
  RESTAURANT_DELIVERY: 'RESTAURANT_DELIVERY',
  SERVICE_BOOKING: 'SERVICE_BOOKING',
  SUBSCRIPTION: 'SUBSCRIPTION',
  OTHER: 'OTHER'
};

exports.FulfillmentType = exports.$Enums.FulfillmentType = {
  PHYSICAL_DELIVERY: 'PHYSICAL_DELIVERY',
  DIGITAL_DOWNLOAD: 'DIGITAL_DOWNLOAD',
  PICKUP_IN_STORE: 'PICKUP_IN_STORE',
  DINE_IN: 'DINE_IN',
  SERVICE_PROVISION: 'SERVICE_PROVISION'
};

exports.AssistantType = exports.$Enums.AssistantType = {
  RULE_BASED: 'RULE_BASED',
  AI_LLM: 'AI_LLM'
};

exports.AssistantTaskType = exports.$Enums.AssistantTaskType = {
  GENERATE_SALES_REPORT: 'GENERATE_SALES_REPORT',
  GENERATE_INVENTORY_REPORT: 'GENERATE_INVENTORY_REPORT',
  MONITOR_LOW_STOCK: 'MONITOR_LOW_STOCK',
  CREATE_PURCHASE_ORDER: 'CREATE_PURCHASE_ORDER',
  SEND_ORDER_STATUS_NOTIFICATION: 'SEND_ORDER_STATUS_NOTIFICATION',
  PROCESS_RECURRING_EXPENSE: 'PROCESS_RECURRING_EXPENSE',
  CHECK_ATTENDANCE_ANOMALIES: 'CHECK_ATTENDANCE_ANOMALIES'
};

exports.AssistantTriggerType = exports.$Enums.AssistantTriggerType = {
  SCHEDULE: 'SCHEDULE',
  EVENT: 'EVENT',
  MANUAL: 'MANUAL'
};

exports.AssistantLogStatus = exports.$Enums.AssistantLogStatus = {
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SUCCESS: 'SUCCESS',
  FAILED: 'FAILED',
  WARNING: 'WARNING'
};

exports.ReturnStatus = exports.$Enums.ReturnStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED'
};

exports.ReturnItemStatus = exports.$Enums.ReturnItemStatus = {
  PENDING: 'PENDING',
  RECEIVED: 'RECEIVED',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  RESTOCKED: 'RESTOCKED',
  REFUNDED: 'REFUNDED',
  REPLACED: 'REPLACED'
};

exports.ReturnReason = exports.$Enums.ReturnReason = {
  DEFECTIVE: 'DEFECTIVE',
  WRONG_ITEM: 'WRONG_ITEM',
  NOT_AS_DESCRIBED: 'NOT_AS_DESCRIBED',
  CHANGE_OF_MIND: 'CHANGE_OF_MIND',
  SIZE_COLOR_ISSUE: 'SIZE_COLOR_ISSUE',
  ARRIVED_LATE: 'ARRIVED_LATE',
  DUPLICATE_ORDER: 'DUPLICATE_ORDER',
  DAMAGED_IN_TRANSIT: 'DAMAGED_IN_TRANSIT',
  OTHER: 'OTHER'
};

exports.StockAdjustmentReason = exports.$Enums.StockAdjustmentReason = {
  INITIAL_STOCK: 'INITIAL_STOCK',
  RECEIVED_PURCHASE: 'RECEIVED_PURCHASE',
  DAMAGED: 'DAMAGED',
  EXPIRED: 'EXPIRED',
  LOST: 'LOST',
  STOLEN: 'STOLEN',
  FOUND: 'FOUND',
  RETURN_TO_SUPPLIER: 'RETURN_TO_SUPPLIER',
  CUSTOMER_RETURN: 'CUSTOMER_RETURN',
  INVENTORY_COUNT: 'INVENTORY_COUNT',
  TRANSFER_OUT: 'TRANSFER_OUT',
  TRANSFER_IN: 'TRANSFER_IN',
  OTHER: 'OTHER'
};

exports.MovementType = exports.$Enums.MovementType = {
  PURCHASE_RECEIPT: 'PURCHASE_RECEIPT',
  SALE: 'SALE',
  ADJUSTMENT_IN: 'ADJUSTMENT_IN',
  ADJUSTMENT_OUT: 'ADJUSTMENT_OUT',
  TRANSFER: 'TRANSFER',
  CUSTOMER_RETURN: 'CUSTOMER_RETURN',
  SUPPLIER_RETURN: 'SUPPLIER_RETURN',
  INITIAL_STOCK: 'INITIAL_STOCK',
  PRODUCTION_IN: 'PRODUCTION_IN',
  PRODUCTION_OUT: 'PRODUCTION_OUT'
};

exports.DrawerStatus = exports.$Enums.DrawerStatus = {
  OPEN: 'OPEN',
  CLOSED: 'CLOSED',
  BALANCED: 'BALANCED',
  DISCREPANCY: 'DISCREPANCY'
};

exports.AuditLogAction = exports.$Enums.AuditLogAction = {
  CREATE: 'CREATE',
  UPDATE: 'UPDATE',
  DELETE: 'DELETE',
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  INVITE: 'INVITE',
  ACCESS_DENIED: 'ACCESS_DENIED'
};

exports.AuditEntityType = exports.$Enums.AuditEntityType = {
  USER: 'USER',
  MEMBER: 'MEMBER',
  ORGANIZATION: 'ORGANIZATION',
  PRODUCT: 'PRODUCT',
  CATEGORY: 'CATEGORY',
  SUPPLIER: 'SUPPLIER',
  CUSTOMER: 'CUSTOMER',
  SALE: 'SALE',
  PURCHASE: 'PURCHASE',
  RETURN: 'RETURN',
  STOCK_BATCH: 'STOCK_BATCH',
  STOCK_ADJUSTMENT: 'STOCK_ADJUSTMENT',
  STOCK_MOVEMENT: 'STOCK_MOVEMENT',
  INVENTORY_LOCATION: 'INVENTORY_LOCATION',
  CASH_DRAWER: 'CASH_DRAWER',
  LOYALTY: 'LOYALTY',
  SETTINGS: 'SETTINGS',
  OTHER: 'OTHER',
  EXPENSE: 'EXPENSE',
  BUDGET: 'BUDGET',
  PROJECT: 'PROJECT',
  RECURRING_EXPENSE: 'RECURRING_EXPENSE',
  ATTENDANCE: 'ATTENDANCE',
  AUTH_CHECK: 'AUTH_CHECK'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  MOBILE_PAYMENT: 'MOBILE_PAYMENT',
  BANK_TRANSFER: 'BANK_TRANSFER',
  CHEQUE: 'CHEQUE',
  STORE_CREDIT: 'STORE_CREDIT',
  GIFT_CARD: 'GIFT_CARD',
  LOYALTY_POINTS: 'LOYALTY_POINTS',
  ON_ACCOUNT: 'ON_ACCOUNT',
  OTHER: 'OTHER'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  PARTIALLY_REFUNDED: 'PARTIALLY_REFUNDED',
  PARTIALLY_PAID: 'PARTIALLY_PAID',
  CANCELLED: 'CANCELLED',
  VOIDED: 'VOIDED'
};

exports.PurchaseStatus = exports.$Enums.PurchaseStatus = {
  DRAFT: 'DRAFT',
  ORDERED: 'ORDERED',
  PARTIALLY_RECEIVED: 'PARTIALLY_RECEIVED',
  RECEIVED: 'RECEIVED',
  BILLED: 'BILLED',
  PARTIALLY_PAID: 'PARTIALLY_PAID',
  PAID: 'PAID',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.MeasurementUnit = exports.$Enums.MeasurementUnit = {
  CUBIC_METER: 'CUBIC_METER',
  CUBIC_FEET: 'CUBIC_FEET',
  SQUARE_METER: 'SQUARE_METER',
  SQUARE_FEET: 'SQUARE_FEET',
  METER: 'METER',
  FEET: 'FEET',
  COUNT: 'COUNT',
  WEIGHT_KG: 'WEIGHT_KG',
  WEIGHT_LB: 'WEIGHT_LB'
};

exports.StorageUnitType = exports.$Enums.StorageUnitType = {
  SHELF: 'SHELF',
  RACK: 'RACK',
  BIN: 'BIN',
  DRAWER: 'DRAWER',
  PALLET: 'PALLET',
  SECTION: 'SECTION',
  REFRIGERATOR: 'REFRIGERATOR',
  FREEZER: 'FREEZER',
  CABINET: 'CABINET',
  BULK_AREA: 'BULK_AREA',
  OTHER: 'OTHER'
};

exports.LocationType = exports.$Enums.LocationType = {
  RETAIL_SHOP: 'RETAIL_SHOP',
  WAREHOUSE: 'WAREHOUSE',
  DISTRIBUTION: 'DISTRIBUTION',
  PRODUCTION: 'PRODUCTION',
  SUPPLIER: 'SUPPLIER',
  CUSTOMER: 'CUSTOMER',
  TEMPORARY: 'TEMPORARY',
  OTHER: 'OTHER'
};

exports.InventoryPolicy = exports.$Enums.InventoryPolicy = {
  FIFO: 'FIFO',
  LIFO: 'LIFO',
  FEFO: 'FEFO'
};

exports.ExpenseStatus = exports.$Enums.ExpenseStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  PAID: 'PAID',
  REIMBURSED: 'REIMBURSED'
};

exports.RecurrenceFrequency = exports.$Enums.RecurrenceFrequency = {
  DAILY: 'DAILY',
  WEEKLY: 'WEEKLY',
  BIWEEKLY: 'BIWEEKLY',
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY',
  YEARLY: 'YEARLY'
};

exports.ConditionType = exports.$Enums.ConditionType = {
  AMOUNT_RANGE: 'AMOUNT_RANGE',
  EXPENSE_CATEGORY: 'EXPENSE_CATEGORY',
  LOCATION: 'LOCATION',
  IS_REIMBURSABLE: 'IS_REIMBURSABLE',
  PROJECT: 'PROJECT',
  HAS_RECEIPT: 'HAS_RECEIPT'
};

exports.ApprovalActionType = exports.$Enums.ApprovalActionType = {
  ROLE: 'ROLE',
  SPECIFIC_MEMBER: 'SPECIFIC_MEMBER',
  SUBMITTER_MANAGER: 'SUBMITTER_MANAGER'
};

exports.ApprovalMode = exports.$Enums.ApprovalMode = {
  ANY_ONE: 'ANY_ONE',
  ALL: 'ALL'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  REQUEST_CHANGES: 'REQUEST_CHANGES',
  REQUEST_INFO: 'REQUEST_INFO'
};

exports.ProjectStatus = exports.$Enums.ProjectStatus = {
  PLANNING: 'PLANNING',
  ACTIVE: 'ACTIVE',
  ON_HOLD: 'ON_HOLD',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED',
  EXPIRED: 'EXPIRED'
};

exports.TriggerType = exports.$Enums.TriggerType = {
  SCHEDULE: 'SCHEDULE',
  EVENT: 'EVENT',
  CONDITION: 'CONDITION',
  MANUAL: 'MANUAL',
  API: 'API'
};

exports.ActionType = exports.$Enums.ActionType = {
  CREATE_PURCHASE_ORDER: 'CREATE_PURCHASE_ORDER',
  SEND_NOTIFICATION: 'SEND_NOTIFICATION',
  GENERATE_REPORT: 'GENERATE_REPORT',
  UPDATE_INVENTORY: 'UPDATE_INVENTORY',
  SEND_CUSTOMER_MESSAGE: 'SEND_CUSTOMER_MESSAGE',
  ADJUST_PRICING: 'ADJUST_PRICING',
  EXPORT_DATA: 'EXPORT_DATA',
  RUN_ANALYSIS: 'RUN_ANALYSIS',
  CUSTOM_ACTION: 'CUSTOM_ACTION'
};

exports.ExecutionStatus = exports.$Enums.ExecutionStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  INVITATION: 'INVITATION',
  MENTION: 'MENTION',
  ANNOUNCEMENT: 'ANNOUNCEMENT',
  REMINDER: 'REMINDER',
  TASK_UPDATE: 'TASK_UPDATE',
  SYSTEM_ALERT: 'SYSTEM_ALERT',
  NEW_MEMBER: 'NEW_MEMBER',
  WELCOME: 'WELCOME',
  INVITATION_ACCEPTED: 'INVITATION_ACCEPTED',
  INVITATION_DECLINED: 'INVITATION_DECLINED',
  EXPENSE_SUBMITTED: 'EXPENSE_SUBMITTED',
  EXPENSE_APPROVAL: 'EXPENSE_APPROVAL',
  EXPENSE_REJECTED: 'EXPENSE_REJECTED',
  EXPENSE_PAID: 'EXPENSE_PAID',
  BUDGET_ALERT: 'BUDGET_ALERT',
  BUDGET_THRESHOLD: 'BUDGET_THRESHOLD'
};

exports.Status = exports.$Enums.Status = {
  ONLINE: 'ONLINE',
  OFFLINE: 'OFFLINE'
};

exports.ChannelType = exports.$Enums.ChannelType = {
  CHANNEL: 'CHANNEL',
  SUBCHANNEL: 'SUBCHANNEL',
  DIRECT_MESSAGE: 'DIRECT_MESSAGE'
};

exports.AccountClass = exports.$Enums.AccountClass = {
  ASSET: 'ASSET',
  LIABILITY: 'LIABILITY',
  EQUITY: 'EQUITY',
  REVENUE: 'REVENUE',
  EXPENSE: 'EXPENSE'
};

exports.PeriodStatus = exports.$Enums.PeriodStatus = {
  OPEN: 'OPEN',
  CLOSED: 'CLOSED',
  LOCKED: 'LOCKED'
};

exports.PeriodType = exports.$Enums.PeriodType = {
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY',
  YEARLY: 'YEARLY'
};

exports.JournalType = exports.$Enums.JournalType = {
  GENERAL: 'GENERAL',
  SALES: 'SALES',
  PURCHASE: 'PURCHASE',
  CASH_RECEIPTS: 'CASH_RECEIPTS',
  CASH_PAYMENTS: 'CASH_PAYMENTS',
  ADJUSTING: 'ADJUSTING',
  CLOSING: 'CLOSING'
};

exports.JournalStatus = exports.$Enums.JournalStatus = {
  DRAFT: 'DRAFT',
  POSTED: 'POSTED',
  REVERSED: 'REVERSED'
};

exports.EntryType = exports.$Enums.EntryType = {
  DEBIT: 'DEBIT',
  CREDIT: 'CREDIT'
};

exports.ReconciliationStatus = exports.$Enums.ReconciliationStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  RECONCILED: 'RECONCILED',
  DISCREPANCY: 'DISCREPANCY'
};

exports.ReportType = exports.$Enums.ReportType = {
  SALES_REPORT: 'SALES_REPORT',
  INVENTORY_REPORT: 'INVENTORY_REPORT',
  EXPENSE_REPORT: 'EXPENSE_REPORT'
};

exports.LoyaltyActionType = exports.$Enums.LoyaltyActionType = {
  SALE_EARNED: 'SALE_EARNED',
  REDEMPTION: 'REDEMPTION',
  MANUAL_ADJUSTMENT: 'MANUAL_ADJUSTMENT',
  PROMOTION: 'PROMOTION',
  SIGN_UP_BONUS: 'SIGN_UP_BONUS',
  RETURN_ADJUSTMENT: 'RETURN_ADJUSTMENT',
  BIRTHDAY_BONUS: 'BIRTHDAY_BONUS',
  REFERRAL_BONUS: 'REFERRAL_BONUS',
  REFERRAL_FIRST_PURCHASE: 'REFERRAL_FIRST_PURCHASE',
  REFERRAL_SIGNUP_VERIFIED: 'REFERRAL_SIGNUP_VERIFIED',
  OTHER: 'OTHER'
};

exports.DriverStatus = exports.$Enums.DriverStatus = {
  ONLINE: 'ONLINE',
  OFFLINE: 'OFFLINE',
  ON_DELIVERY: 'ON_DELIVERY'
};

exports.VehicleType = exports.$Enums.VehicleType = {
  MOTORCYCLE: 'MOTORCYCLE',
  CAR: 'CAR',
  VAN: 'VAN',
  BICYCLE: 'BICYCLE'
};

exports.DeliveryStatus = exports.$Enums.DeliveryStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  PICKING_UP: 'PICKING_UP',
  AT_PICKUP: 'AT_PICKUP',
  IN_TRANSIT: 'IN_TRANSIT',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  FAILED_DELIVERY: 'FAILED_DELIVERY'
};

exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  Member: 'Member',
  SystemUnit: 'SystemUnit',
  UnitConversion: 'UnitConversion',
  Invitation: 'Invitation',
  Department: 'Department',
  Backup: 'Backup',
  DepartmentMember: 'DepartmentMember',
  Category: 'Category',
  Product: 'Product',
  ProductVariant: 'ProductVariant',
  VariantSellingUnit: 'VariantSellingUnit',
  Supplier: 'Supplier',
  ProductSupplier: 'ProductSupplier',
  Customer: 'Customer',
  Tax: 'Tax',
  AppliedTax: 'AppliedTax',
  Sale: 'Sale',
  SaleItem: 'SaleItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Assistant: 'Assistant',
  AssistantMessage: 'AssistantMessage',
  AssistantTask: 'AssistantTask',
  AssistantLog: 'AssistantLog',
  Purchase: 'Purchase',
  PurchaseItem: 'PurchaseItem',
  PurchasePayment: 'PurchasePayment',
  Return: 'Return',
  ReturnItem: 'ReturnItem',
  InventoryLocation: 'InventoryLocation',
  StorageZone: 'StorageZone',
  StorageUnit: 'StorageUnit',
  StoragePosition: 'StoragePosition',
  StockBatch: 'StockBatch',
  ProductVariantStock: 'ProductVariantStock',
  StockAdjustment: 'StockAdjustment',
  StockMovement: 'StockMovement',
  Attachment: 'Attachment',
  CashDrawer: 'CashDrawer',
  AuditLog: 'AuditLog',
  OrganizationSettings: 'OrganizationSettings',
  Expense: 'Expense',
  ExpenseCategory: 'ExpenseCategory',
  RecurringExpense: 'RecurringExpense',
  ExpenseApproval: 'ExpenseApproval',
  ApprovalWorkflow: 'ApprovalWorkflow',
  ApprovalWorkflowStep: 'ApprovalWorkflowStep',
  ApprovalStepCondition: 'ApprovalStepCondition',
  ApprovalStepAction: 'ApprovalStepAction',
  Budget: 'Budget',
  BudgetReport: 'BudgetReport',
  BudgetAlert: 'BudgetAlert',
  ExecutionLog: 'ExecutionLog',
  Notification: 'Notification',
  MpesaPaymentRequest: 'MpesaPaymentRequest',
  AttendanceLog: 'AttendanceLog',
  Apikey: 'Apikey',
  Account: 'Account',
  Verification: 'Verification',
  Session: 'Session',
  CustomRole: 'CustomRole',
  RoleTemplate: 'RoleTemplate',
  Channel: 'Channel',
  ChannelMember: 'ChannelMember',
  Message: 'Message',
  Reaction: 'Reaction',
  ChatMessageAttachment: 'ChatMessageAttachment',
  Mention: 'Mention',
  Hashtag: 'Hashtag',
  Favorite: 'Favorite',
  ThreadLink: 'ThreadLink',
  AccountType: 'AccountType',
  FinancialAccount: 'FinancialAccount',
  FiscalPeriod: 'FiscalPeriod',
  Journal: 'Journal',
  JournalEntry: 'JournalEntry',
  AccountReconciliation: 'AccountReconciliation',
  Report: 'Report',
  Subscription: 'Subscription',
  Jwks: 'Jwks',
  ReferralProgram: 'ReferralProgram',
  Referral: 'Referral',
  LoyaltyPointsConfig: 'LoyaltyPointsConfig',
  LoyaltyProgram: 'LoyaltyProgram',
  LoyaltyTier: 'LoyaltyTier',
  LoyaltyTransaction: 'LoyaltyTransaction',
  Driver: 'Driver',
  Vehicle: 'Vehicle',
  Delivery: 'Delivery'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\code\\dl-mn\\apps\\finance\\prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\code\\dl-mn\\apps\\finance\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "..",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../prisma/client\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// --- Core Models ---\n\nmodel User {\n  id                   String         @id @default(cuid())\n  name                 String?\n  email                String         @unique\n  password             String?\n  role                 UserRole       @default(MEMBER)\n  isActive             Boolean        @default(true)\n  createdAt            DateTime       @default(now())\n  updatedAt            DateTime       @updatedAt\n  emailVerified        Boolean?\n  image                String?\n  banned               Boolean?\n  banReason            String?\n  banExpires           DateTime?\n  username             String?\n  accounts             Account[]\n  members              Member[]\n  invitations          Invitation[]\n  sessions             Session[]\n  activeOrganizationId String?\n  notifications        Notification[]\n  expenseNotifications Notification[] @relation(\"UserExpenseNotifications\")\n  displayUsername      String?\n  apikeys              Apikey[]\n\n  // Referral System Fields\n  referralCode  String?    @unique\n  referrerId    String?\n  referrer      User?      @relation(\"UserReferrer\", fields: [referrerId], references: [id], onDelete: SetNull)\n  referees      User[]     @relation(\"UserReferrer\")\n  referralsMade Referral[] @relation(\"ReferredBy\")\n  referredBy    Referral?  @relation(\"ReferredUser\")\n\n  @@unique([username])\n  @@map(\"user\")\n}\n\nenum UserRole {\n  SUPER_ADMIN\n  ADMIN\n  DEVELOPER\n  CLIENT\n  MEMBER\n  CUSTOMER\n}\n\nenum MemberRole {\n  OWNER // Full control over the organization\n  ADMIN // Can manage most aspects, except billing/org deletion\n  MANAGER // Can manage day-to-day operations (sales, inventory, staff)\n  EMPLOYEE // Standard user, can perform assigned tasks (e.g., make sales, receive stock)\n  CASHIER // Limited role, primarily for making sales\n  REPORTER // View-only access to reports\n  CUSTOMER // Can access customer portal, view own data\n  GUEST // Add GUEST role for temporary external users\n}\n\nmodel Organization {\n  id           String   @id @default(cuid())\n  name         String\n  slug         String   @unique\n  logo         String?\n  description  String?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @default(now()) @updatedAt\n  customFields Json?\n  email        String?\n  phone        String?\n  address      String?\n\n  defaultLocationId  String?\n  defaultWarehouseId String?\n\n  members              Member[]\n  invitations          Invitation[]\n  customers            Customer[]\n  categories           Category[]\n  products             Product[]\n  suppliers            Supplier[]\n  sales                Sale[]\n  orders               Order[]\n  purchases            Purchase[]\n  returns              Return[]\n  stockBatches         StockBatch[]\n  inventoryLocations   InventoryLocation[]\n  productVariantStocks ProductVariantStock[]\n  stockAdjustments     StockAdjustment[]\n  stockMovements       StockMovement[]\n  cashDrawers          CashDrawer[]\n  loyaltyTransactions  LoyaltyTransaction[]\n  attachments          Attachment[]\n  auditLogs            AuditLog[]\n  settings             OrganizationSettings?\n  executionLogs        ExecutionLog[]\n  notifications        Notification[]\n\n  // New relations for storage management\n  storageZones     StorageZone[]\n  storageUnits     StorageUnit[]\n  storagePositions StoragePosition[]\n\n  // Expense management relations\n  expenses          Expense[]\n  budgets           Budget[]\n  recurringExpenses RecurringExpense[]\n  expenseApprovals  ExpenseApproval[]\n  budgetAlerts      BudgetAlert[]\n  departments       Department[]\n\n  expenseCategories        ExpenseCategory[]\n  expenseApprovalRequired  Boolean           @default(false) // Whether expenses require approval\n  expenseApprovalThreshold Decimal?          @db.Decimal(10, 2) // Amount above which approval is required\n  expenseReceiptRequired   Boolean           @default(true) // Whether receipts are mandatory\n  expenseReceiptThreshold  Decimal?          @db.Decimal(10, 2) // Amount above which receipt is required\n\n  activeExpenseWorkflowId String?\n  activeExpenseWorkflow   ApprovalWorkflow? @relation(\"ActiveOrgWorkflow\", fields: [activeExpenseWorkflowId], references: [id], onDelete: SetNull)\n\n  // Relation to all workflows defined for this org\n  approvalWorkflows        ApprovalWorkflow[] @relation(\"OrgWorkflows\")\n  expenseApprovalWorkflows ApprovalWorkflow[] @relation(\"ExpenseApprovalWorkflows\")\n  defaultExpenseCurrency   String             @default(\"USD\")\n  expenseTagOptions        String[]\n  assistants               Assistant[]\n  assistantLogs            AssistantLog[]\n\n  // Accounting related relations\n  accounts      FinancialAccount[]\n  journals      Journal[]\n  fiscalPeriods FiscalPeriod[]\n  accountTypes  AccountType[]\n\n  mpesaPaymentRequests MpesaPaymentRequest[]\n  attendanceLogs       AttendanceLog[]\n  taxes                Tax[]\n  channels             Channel[] // Channels for chat functionality\n  customRoles          CustomRole[]\n  reports              Report[]\n  backups              Backup[]\n  Subscription         Subscription?\n  referrals            Referral[]\n  loyaltyProgram       LoyaltyProgram?\n  loyaltyPointsConfigs LoyaltyPointsConfig[]\n  referralPrograms     ReferralProgram[]\n\n  drivers    Driver[]\n  vehicles   Vehicle[]\n  deliveries Delivery[]\n\n  @@index([slug])\n  @@map(\"organization\")\n}\n\nmodel Member {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  userId         String\n  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role           MemberRole\n  isActive       Boolean      @default(true)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n  phone          String?\n  email          String?\n  address        String?\n  age            String?\n  tags           String?\n\n  auditLogs            AuditLog[]\n  sales                Sale[]\n  purchases            Purchase[]\n  purchasePayments     PurchasePayment[]\n  stockAdjustments     StockAdjustment[]\n  stockMovements       StockMovement[]\n  loyaltyTransactions  LoyaltyTransaction[]\n  cashDrawers          CashDrawer[]\n  inventoryManagements InventoryLocation[]  @relation(\"LocationManager\")\n  createdCustomers     Customer[]           @relation(\"CustomerCreatedBy\")\n  updatedCustomers     Customer[]           @relation(\"CustomerUpdatedBy\")\n  uploadedAttachments  Attachment[]\n  processedReturns     Return[]\n  expenseApprovals     ExpenseApproval[]    @relation(\"ApproverMember\")\n\n  notifications            Notification[]\n  approvalStepConditions   ApprovalStepCondition[] @relation(\"LocationConditions\")\n  approvalStepActions      ApprovalStepAction[]    @relation(\"ApprovalStepActionMember\")\n  headedDepartments        Department[]            @relation(\"DepartmentHead\")\n  // Expense relations\n  submittedExpenses        Expense[]               @relation(\"ExpenseSubmitter\")\n  approvedExpenses         Expense[]               @relation(\"ExpenseApprover\")\n  createdBudgets           Budget[]\n  createdRecurringExpenses RecurringExpense[]\n  generatedBudgetReports   BudgetReport[]\n  cardId                   String?                 @unique\n  mpesaPaymentRequests     MpesaPaymentRequest[]\n\n  departmentMemberships DepartmentMember[]\n\n  // --- Attendance Tracking Fields ---\n  isCheckedIn              Boolean            @default(false)\n  lastCheckInTime          DateTime?\n  currentCheckInLocationId String? // References InventoryLocation\n  currentCheckInLocation   InventoryLocation? @relation(fields: [currentCheckInLocationId], references: [id], onDelete: SetNull)\n  currentAttendanceLogId   String?            @unique // Link to the active AttendanceLog record\n  currentAttendanceLog     AttendanceLog?     @relation(\"ActiveCheckIn\", fields: [currentAttendanceLogId], references: [id], onDelete: SetNull)\n  attendanceLogs           AttendanceLog[]\n  // --- End Attendance Tracking Fields ---\n\n  orders Order[]\n\n  // New field to mark temporary guest members\n  isGuest        Boolean   @default(false)\n  guestExpiresAt DateTime? // Expiration for the guest account\n\n  status            Status             @default(OFFLINE)\n  sentMessages      Message[]\n  reactions         Reaction[]\n  mentions          Mention[]\n  favorites         Favorite[]\n  channels          ChannelMember[]\n  createdChannels   Channel[]          @relation(\"ChannelCreator\")\n  assistantMessages AssistantMessage[]\n\n  customRoles      CustomRole[] @relation(\"MemberCustomRoles\")\n  generatedReports Report[]\n  driver           Driver?\n\n  @@unique([organizationId, userId])\n  @@index([organizationId, userId])\n  @@index([userId])\n  @@index([cardId])\n  @@index([userId, cardId])\n  @@index([organizationId])\n  @@index([isCheckedIn])\n  @@map(\"member\")\n}\n\n// Defines the base type of a unit.\n\nenum UnitType {\n  COUNT // For discrete items like pieces, dozens, boxes\n  WEIGHT // For items measured by weight like kg, g, lb\n  VOLUME // For items measured by volume like L, mL\n  LENGTH // For items measured by length like m, cm\n  AREA // For items measured by area like sq m, sq ft\n  TIME // For service items measured by time like hour, minute\n  OTHER\n}\n\n// Stores the universal, system-wide units of measure.\n// This table is NOT organization-specific.\n\nmodel SystemUnit {\n  id     String   @id @default(cuid())\n  name   String   @unique // e.g., \"Kilogram\", \"Piece\", \"Liter\"\n  symbol String   @unique // e.g., \"kg\", \"pc\", \"L\"\n  type   UnitType // The physical quantity the unit measures.\n\n  // Relations for conversion\n  conversionsFrom UnitConversion[] @relation(\"FromUnit\")\n  conversionsTo   UnitConversion[] @relation(\"ToUnit\")\n\n  // Relations to product models (replacing UnitOfMeasure)\n  productVariantBaseUnits     ProductVariant[]     @relation(\"PVBaseUnit\")\n  productVariantStockingUnits ProductVariant[]     @relation(\"PVStockingUnit\")\n  variantSellingUnits         VariantSellingUnit[]\n  purchaseItemOrderUnits      PurchaseItem[]       @relation(\"PIOrderUnit\")\n  saleItemSellingUnits        SaleItem[]           @relation(\"SISellingUnit\")\n\n  @@map(\"system_unit\")\n}\n\n// Stores conversion factors between two system units.\n\nmodel UnitConversion {\n  id         String     @id @default(cuid())\n  fromUnitId String\n  fromUnit   SystemUnit @relation(\"FromUnit\", fields: [fromUnitId], references: [id], onDelete: Cascade)\n  toUnitId   String\n  toUnit     SystemUnit @relation(\"ToUnit\", fields: [toUnitId], references: [id], onDelete: Cascade)\n  factor     Decimal    @db.Decimal(20, 10) // The multiplication factor to convert from 'fromUnit' to 'toUnit'\n\n  @@unique([fromUnitId, toUnitId])\n  @@map(\"unit_conversion\")\n}\n\nmodel Invitation {\n  id             String           @id @default(cuid())\n  organizationId String\n  organization   Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  email          String\n  role           MemberRole\n  status         InvitationStatus @default(PENDING)\n  token          String           @unique\n  expiresAt      DateTime\n  inviterId      String\n  inviter        User             @relation(fields: [inviterId], references: [id], onDelete: Cascade)\n  createdAt      DateTime         @default(now())\n  updatedAt      DateTime         @updatedAt\n\n  // New fields for channel-specific guest invitations\n  channelId     String? // The channel the guest is invited to\n  channel       Channel? @relation(fields: [channelId], references: [id], onDelete: SetNull)\n  isGuestInvite Boolean  @default(false) // Flag to identify guest invitations\n\n  // Index the new channelId field\n  @@index([email])\n  @@index([organizationId])\n  @@index([inviterId])\n  @@index([channelId])\n  @@map(\"invitation\")\n}\n\n// --- Department Models (Department, DepartmentMember, DepartmentMemberRole - as previously defined) ---\n\nmodel Department {\n  id             String       @id @default(cuid())\n  name           String\n  image          String?\n  banner         String?\n  description    String?\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  headId            String? // References the Member who is the head\n  head              Member?            @relation(\"DepartmentHead\", fields: [headId], references: [id], onDelete: SetNull)\n  departmentMembers DepartmentMember[]\n  activeBudgetId    String?            @unique\n  activeBudget      Budget?            @relation(\"DepartmentBudget\", fields: [activeBudgetId], references: [id], onDelete: SetNull)\n  budgets           Budget[]           @relation(\"DepartmentBudgets\")\n\n  customFields Json?\n\n  @@unique([organizationId, name])\n  @@index([organizationId])\n  @@map(\"department\")\n}\n\nmodel Backup {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  fileUrl  String // URL to access the backup file\n  fileSize Float // Size of the backup file in bytes\n  status   BackupStatus @default(COMPLETED)\n  notes    String? // Optional notes, e.g., \"Manual backup before migration\"\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizationId])\n  @@map(\"backups\")\n}\n\nenum BackupStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  RESTORING\n}\n\nmodel DepartmentMember {\n  id                 String               @id @default(cuid())\n  departmentId       String\n  department         Department           @relation(fields: [departmentId], references: [id], onDelete: Cascade)\n  memberId           String\n  member             Member               @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  role               DepartmentMemberRole @default(MEMBER) // Role within the department\n  canApproveExpenses Boolean              @default(false) // Specific flag if this member can approve expenses for the dept\n  canManageBudget    Boolean              @default(false) // Specific flag for budget management permissions\n  createdAt          DateTime             @default(now())\n  updatedAt          DateTime             @updatedAt\n\n  // A member can only be in a department once\n  @@unique([departmentId, memberId])\n  @@index([memberId])\n  @@index([departmentId])\n  @@map(\"department_member\")\n}\n\nenum DepartmentMemberRole {\n  HEAD // Department Head with full control over the department\n  MANAGER // Managerial role within the department\n  MEMBER // Regular member of the department\n  VIEWER // Read-only access to department information\n}\n\nmodel Category {\n  id            String     @id @default(cuid())\n  createdAt     DateTime   @default(now())\n  updatedAt     DateTime   @updatedAt\n  name          String\n  description   String?\n  parentId      String?\n  parent        Category?  @relation(\"CategoryToSubcategory\", fields: [parentId], references: [id], onDelete: Restrict)\n  subcategories Category[] @relation(\"CategoryToSubcategory\")\n  products      Product[]\n  color         String?\n  code          String     @unique\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@unique([organizationId, name])\n  @@index([name])\n  @@index([organizationId])\n  @@index([organizationId, name])\n}\n\nmodel Product {\n  id          String   @id @default(cuid())\n  name        String\n  description String?\n  sku         String   @unique\n  barcode     String?  @unique\n  categoryId  String\n  category    Category @relation(fields: [categoryId], references: [id])\n  isActive    Boolean  @default(true)\n  imageUrls   String[]\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Loyalty Points Override for this specific product\n  pointsOnPurchase Int?\n\n  // Physical dimensions for space calculation\n  width            Float?\n  height           Float?\n  length           Float?\n  dimensionUnit    MeasurementUnit?\n  weight           Float?\n  weightUnit       MeasurementUnit?\n  volumetricWeight Float? // Calculated dimensional weight\n\n  brand               String?\n  rating              Float?\n  lowStockThreshold   Int?\n  isNew               Boolean  @default(false)\n  detailedDescription String?\n  tags                String[]\n  isFeatured          Boolean  @default(false)\n\n  defaultLocationId String?\n  defaultLocation   InventoryLocation? @relation(\"ProductDefaultLocation\", fields: [defaultLocationId], references: [id], onDelete: SetNull)\n\n  // Loyalty Points Override\n  loyaltyPointsOverride Int? // Specific points for this product, overrides default calculation\n\n  // Relations\n  variants     ProductVariant[]\n  variantStock ProductVariantStock[]\n  suppliers    ProductSupplier[]\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@index([name])\n  @@index([sku])\n  @@index([organizationId])\n  @@index([organizationId, id])\n  @@index([defaultLocationId])\n}\n\nmodel ProductVariant {\n  id               String                @id @default(cuid())\n  createdAt        DateTime              @default(now())\n  updatedAt        DateTime              @updatedAt\n  productId        String\n  product          Product               @relation(fields: [productId], references: [id], onDelete: Cascade)\n  name             String\n  sku              String\n  barcode          String?               @unique\n  attributes       Json\n  isActive         Boolean               @default(true)\n  reorderPoint     Int                   @default(5)\n  reorderQty       Int                   @default(10)\n  lowStockAlert    Boolean               @default(false)\n  buyingPrice      Decimal               @db.Decimal(10, 2)\n  wholesalePrice   Decimal?              @db.Decimal(10, 2)\n  retailPrice      Decimal?              @db.Decimal(10, 2)\n  orderItems       OrderItem[]\n  isPopular        Boolean               @default(false)\n  isNew            Boolean               @default(false)\n  promotionalPrice Decimal?              @db.Decimal(10, 2)\n  saleItems        SaleItem[]\n  purchaseItems    PurchaseItem[]\n  stockBatches     StockBatch[]\n  stockAdjustments StockAdjustment[]\n  stockMovements   StockMovement[]\n  variantStocks    ProductVariantStock[]\n  suppliers        ProductSupplier[]\n\n  // Loyalty Points Override for this specific variant\n  pointsOnPurchase Int?\n\n  // Loyalty Points Override\n  loyaltyPointsOverride Int? // Specific points for this variant, overrides product and default calculation\n\n  // MODIFIED: Relations now point to the universal SystemUnit model\n  baseUnitId     String\n  baseUnit       SystemUnit           @relation(\"PVBaseUnit\", fields: [baseUnitId], references: [id], onDelete: Restrict)\n  stockingUnitId String\n  stockingUnit   SystemUnit           @relation(\"PVStockingUnit\", fields: [stockingUnitId], references: [id], onDelete: Restrict)\n  sellingUnits   VariantSellingUnit[]\n\n  @@unique([productId, sku])\n  @@unique([productId, barcode])\n  @@index([sku])\n}\n\nmodel VariantSellingUnit {\n  id        String         @id @default(cuid())\n  variantId String\n  variant   ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)\n\n  // MODIFIED: unitOfMeasureId now points to SystemUnit\n  unitOfMeasureId String\n  unitOfMeasure   SystemUnit @relation(fields: [unitOfMeasureId], references: [id], onDelete: Restrict)\n\n  retailPrice    Decimal? @db.Decimal(10, 2)\n  wholesalePrice Decimal? @db.Decimal(10, 2)\n\n  @@unique([variantId, unitOfMeasureId])\n  @@map(\"variant_selling_unit\")\n}\n\nenum SupplierType {\n  manufacturer\n  distributor\n  wholesaler\n  service_provider\n}\n\nenum RiskLevel {\n  low\n  medium\n  high\n}\n\nmodel Supplier {\n  id                 String       @id @default(cuid())\n  name               String\n  code               String       @unique // Add this\n  type               SupplierType // Add this\n  website            String? // Add this\n  taxId              String? // Add this\n  registrationNumber String? // Add this\n  currency           String? // Add this\n  categories         String[] // Add this\n  customBadges       String[] // Add this\n  riskLevel          RiskLevel    @default(low) // Add this\n\n  // Contact Info\n  primaryContact String // Rename from contactName\n  phone          String?\n  email          String? @unique\n\n  // Address Info\n  street  String?\n  city    String?\n  state   String?\n  zipCode String?\n  country String?\n\n  paymentTerms String?\n  leadTime     Int?\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  customFields Json?\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  products          ProductSupplier[]\n  purchases         Purchase[]\n  expenses          Expense[]\n  recurringExpenses RecurringExpense[]\n  stockBatches      StockBatch[]\n\n  @@unique([organizationId, name])\n  @@unique([organizationId, email])\n  @@unique([organizationId, id])\n  @@index([organizationId])\n}\n\nmodel ProductSupplier {\n  id                   String          @id @default(cuid())\n  productId            String\n  product              Product         @relation(fields: [productId], references: [id], onDelete: Cascade) // Added onDelete\n  variantId            String?\n  variant              ProductVariant? @relation(fields: [variantId], references: [id], onDelete: Cascade) // Added onDelete\n  supplierId           String\n  supplier             Supplier        @relation(fields: [supplierId], references: [id], onDelete: Cascade) // Added onDelete\n  supplierSku          String? // The SKU used by the supplier for this product\n  costPrice            Decimal         @db.Decimal(10, 2)\n  minimumOrderQuantity Int? // Added: Minimum quantity required by supplier\n  packagingUnit        String? // Added: e.g., \"Case of 12\", \"Pallet\", \"Each\"\n  isPreferred          Boolean         @default(false) // Is this the preferred supplier for this product?\n  createdAt            DateTime        @default(now())\n  updatedAt            DateTime        @updatedAt\n\n  @@unique([productId, supplierId])\n  @@index([supplierId])\n}\n\nenum CustomerCreationType {\n  MEMBER_CREATED\n  ONLINE_REGISTRATION\n  IMPORTED\n  API\n  GUEST\n  OTHER\n}\n\nmodel Customer {\n  id            String               @id @default(cuid())\n  name          String\n  email         String? // Unique within an organization\n  phone         String?\n  address       String?\n  notes         String?\n  company       String?\n  avatar        String?\n  gender        String?\n  customerType  String?\n  dateOfBirth   String?\n  loyaltyPoints Int                  @default(0)\n  isActive      Boolean              @default(true)\n  createdAt     DateTime             @default(now())\n  updatedAt     DateTime             @updatedAt\n  createdById   String?\n  updatedById   String?\n  creationType  CustomerCreationType @default(MEMBER_CREATED)\n\n  // Loyalty System Fields\n  loyaltyTierId String?\n  loyaltyTier   LoyaltyTier? @relation(fields: [loyaltyTierId], references: [id], onDelete: SetNull)\n\n  // Relations\n  organizationId      String\n  organization        Organization         @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  sales               Sale[]\n  loyaltyTransactions LoyaltyTransaction[]\n  createdBy           Member?              @relation(\"CustomerCreatedBy\", fields: [createdById], references: [id], onDelete: Restrict)\n  updatedBy           Member?              @relation(\"CustomerUpdatedBy\", fields: [updatedById], references: [id], onDelete: SetNull)\n\n  orders Order[]\n\n  @@unique([organizationId, email])\n  @@unique([organizationId, name])\n  @@index([email, organizationId])\n  @@index([name])\n  @@index([email])\n  @@index([organizationId])\n}\n\nmodel Tax {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  name           String // e.g., \"VAT\", \"Sales Tax\"\n  rate           Decimal      @db.Decimal(5, 4) // e.g., 0.16 for 16%\n  description    String?\n  isDefault      Boolean      @default(false)\n  isActive       Boolean      @default(true)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  // Relation to sales where this tax was applied\n  appliedToSales AppliedTax[]\n\n  @@unique([organizationId, name])\n  @@index([organizationId])\n  @@map(\"tax\")\n}\n\n// --- New AppliedTax Model (Junction Table) ---\n\nmodel AppliedTax {\n  id        String   @id @default(cuid())\n  saleId    String\n  sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)\n  taxId     String\n  tax       Tax      @relation(fields: [taxId], references: [id], onDelete: Restrict) // Prevent deleting a tax if it's been used\n  taxAmount Decimal  @db.Decimal(10, 2) // The amount of tax applied for this specific tax on this sale\n  createdAt DateTime @default(now())\n\n  @@unique([saleId, taxId])\n  @@index([saleId])\n  @@index([taxId])\n  @@map(\"applied_tax\")\n}\n\n// --- Transactional Models ---\n\nmodel Sale {\n  id             String    @id @default(cuid())\n  saleNumber     String\n  customerId     String?\n  customer       Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull) // Allow sale without customer, or if customer deleted\n  memberId       String\n  member         Member    @relation(fields: [memberId], references: [id])\n  saleDate       DateTime  @default(now())\n  totalAmount    Decimal   @db.Decimal(10, 2) // Before discounts and taxes\n  discountAmount Decimal   @default(0) @db.Decimal(10, 2)\n  taxAmount      Decimal   @default(0) @db.Decimal(10, 2)\n  finalAmount    Decimal   @default(0) @db.Decimal(10, 2) // After discounts and taxes\n\n  amountReceived Decimal? @db.Decimal(10, 2) // Amount tendered by the customer, especially for cash payments.\n  change         Decimal? @db.Decimal(10, 2) // Change given back to the customer.\n\n  paymentMethod PaymentMethod\n  paymentStatus PaymentStatus     @default(PENDING)\n  locationId    String // Location where the sale was made\n  location      InventoryLocation @relation(fields: [locationId], references: [id], onDelete: Cascade) // Prevent deletion if sales exist\n  notes         String?\n  cashDrawerId  String?\n  cashDrawer    CashDrawer?       @relation(fields: [cashDrawerId], references: [id], onDelete: SetNull) // Allow sale if drawer deleted\n  receiptUrl    String?\n  createdAt     DateTime          @default(now())\n  updatedAt     DateTime          @updatedAt\n  orders        Order[]\n\n  // Relations\n  items              SaleItem[]\n  attachments        Attachment[]\n  loyaltyTransaction LoyaltyTransaction?\n  returns            Return[]\n  appliedTaxes       AppliedTax[]\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade) // Added onDelete\n\n  // Enforce uniqueness per organization\n  @@unique([organizationId, saleNumber])\n  @@index([memberId])\n  @@index([saleDate])\n  @@index([customerId])\n  @@index([organizationId, saleDate])\n  @@index([organizationId, customerId])\n  @@index([organizationId])\n}\n\nmodel SaleItem {\n  id             String         @id @default(cuid())\n  saleId         String\n  sale           Sale           @relation(fields: [saleId], references: [id], onDelete: Cascade)\n  variantId      String\n  variant        ProductVariant @relation(fields: [variantId], references: [id], onDelete: Restrict)\n  stockBatchId   String?\n  stockBatch     StockBatch?    @relation(fields: [stockBatchId], references: [id], onDelete: Restrict)\n  quantity       Int\n  unitPrice      Decimal        @db.Decimal(10, 2)\n  unitCost       Decimal        @db.Decimal(10, 2)\n  discountAmount Decimal        @default(0) @db.Decimal(10, 2)\n  taxRate        Decimal        @default(0) @db.Decimal(5, 4)\n  taxAmount      Decimal        @db.Decimal(10, 2)\n  totalAmount    Decimal        @db.Decimal(10, 2)\n  createdAt      DateTime       @default(now())\n  updatedAt      DateTime       @updatedAt\n  returns        ReturnItem[]\n\n  sellingUnitId String\n  sellingUnit   SystemUnit @relation(\"SISellingUnit\", fields: [sellingUnitId], references: [id], onDelete: Restrict)\n\n  @@index([saleId])\n  @@index([variantId])\n  @@index([stockBatchId])\n}\n\nenum OrderStatus {\n  PENDING_CONFIRMATION // Order placed, awaiting business confirmation (e.g., restaurant)\n  CONFIRMED // Order confirmed by the business\n  PREPARING // Order is being prepared (e.g., food, package)\n  READY_FOR_PICKUP // Order is ready for customer pickup\n  OUT_FOR_DELIVERY // Order is out for delivery\n  DELIVERED // Order has been delivered\n  COMPLETED // Order fulfilled and completed (especially for services/digital goods)\n  CANCELLED // Order was cancelled\n  FAILED // Order processing failed (e.g., payment issue)\n  ON_HOLD // Order is temporarily on hold\n}\n\nenum OrderType {\n  RETAIL_SALE // Corresponds to your current Sale model\n  ONLINE_ORDER // For e-commerce type orders\n  RESTAURANT_DINE_IN // For restaurant dine-in\n  RESTAURANT_TAKEOUT // For restaurant takeout\n  RESTAURANT_DELIVERY // For restaurant's own delivery\n  SERVICE_BOOKING // For booking services\n  SUBSCRIPTION // For recurring orders/subscriptions\n  OTHER // For any other type of order\n}\n\nenum FulfillmentType {\n  PHYSICAL_DELIVERY\n  DIGITAL_DOWNLOAD\n  PICKUP_IN_STORE\n  DINE_IN\n  SERVICE_PROVISION\n}\n\n// --- Order Models ---\n\nmodel Order {\n  id             String       @id @default(cuid())\n  orderNumber    String // Human-readable unique order number\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)\n  memberId   String? // Member who placed or is managing the order\n  member     Member?   @relation(fields: [memberId], references: [id], onDelete: SetNull)\n\n  status          OrderStatus     @default(PENDING_CONFIRMATION)\n  orderType       OrderType       @default(ONLINE_ORDER)\n  fulfillmentType FulfillmentType @default(PHYSICAL_DELIVERY)\n\n  items OrderItem[]\n\n  subTotal       Decimal @db.Decimal(12, 2) // Sum of (OrderItem.unitPrice * OrderItem.quantity) before discounts and taxes\n  discountAmount Decimal @default(0) @db.Decimal(12, 2) // Order-level discount\n  taxAmount      Decimal @default(0) @db.Decimal(12, 2) // Order-level tax\n  shippingAmount Decimal @default(0) @db.Decimal(12, 2)\n  totalAmount    Decimal @db.Decimal(12, 2) // Final amount to be paid\n\n  paymentMethod        PaymentMethod? // From your existing enum [cite: 188]\n  paymentStatus        PaymentStatus  @default(PENDING) // From your existing enum [cite: 188]\n  paymentTransactionId String? // Reference to a payment gateway transaction\n\n  // --- Timestamps ---\n  placedAt     DateTime  @default(now()) // When the customer placed the order\n  confirmedAt  DateTime? // When the business confirmed the order\n  preparingAt  DateTime?\n  readyAt      DateTime? // Ready for pickup/delivery\n  dispatchedAt DateTime?\n  deliveredAt  DateTime?\n  completedAt  DateTime? // When the order is fully resolved\n  cancelledAt  DateTime?\n  updatedAt    DateTime  @updatedAt\n\n  // --- Fulfillment Details ---\n  shippingAddress  Json? // Could be JSON for structured address\n  billingAddress   Json? // Could be JSON\n  deliveryNotes    String?\n  pickupLocationId String? // If pickup, link to InventoryLocation [cite: 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]\n  pickupLocation   InventoryLocation? @relation(\"OrderPickupLocation\", fields: [pickupLocationId], references: [id], onDelete: SetNull)\n\n  // --- Restaurant Specific ---\n  tableNumber              String? // For dine-in\n  estimatedPreparationTime Int? // In minutes\n\n  // --- General ---\n  notes String? // Customer or internal notes\n  tags  String[] // For categorization/filtering\n\n  // --- Delivery Information ---\n  delivery Delivery?\n\n  // --- Potential Link to Sale (if you want to keep Sale for point-of-sale and Order for other channels) ---\n  saleId String? @unique // If this order resulted in a direct Sale record\n  sale   Sale?   @relation(fields: [saleId], references: [id])\n\n  @@unique([organizationId, orderNumber])\n  @@index([organizationId, customerId])\n  @@index([organizationId, status])\n  @@index([organizationId, orderType])\n  @@index([placedAt])\n  @@map(\"order\")\n}\n\nmodel OrderItem {\n  id      String @id @default(cuid())\n  orderId String\n  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  variantId   String\n  variant     ProductVariant @relation(fields: [variantId], references: [id], onDelete: Restrict) // ProductVariant from your schema [cite: 46, 47, 48]\n  productName String // Snapshot of product name at time of order\n  variantName String // Snapshot of variant name\n\n  quantity   Int\n  unitPrice  Decimal @db.Decimal(10, 2) // Price per unit at time of order (can include item-specific discounts)\n  totalPrice Decimal @db.Decimal(12, 2) // quantity * unitPrice\n\n  // --- Optional fields ---\n  discountAmount Decimal  @default(0) @db.Decimal(10, 2) // Item-specific discount amount\n  taxRate        Decimal? @db.Decimal(5, 4) // Item-specific tax rate\n  taxAmount      Decimal? @db.Decimal(10, 2) // Item-specific tax amount\n\n  notes String? // E.g., customization for a food item\n\n  // --- Fulfillment related for this item ---\n  // stockBatchId   String?  // If tracking specific batches for this order item [cite: 73, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140]\n  // stockBatch     StockBatch? @relation(fields: [stockBatchId], references: [id], onDelete:SetNull)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([orderId])\n  @@index([variantId])\n  @@map(\"order_item\")\n}\n\nenum AssistantType {\n  RULE_BASED // Executes predefined rules and actions\n  AI_LLM // Uses Language Models (more complex, future scope)\n}\n\nenum AssistantTaskType {\n  GENERATE_SALES_REPORT\n  GENERATE_INVENTORY_REPORT\n  MONITOR_LOW_STOCK\n  CREATE_PURCHASE_ORDER\n  SEND_ORDER_STATUS_NOTIFICATION\n  PROCESS_RECURRING_EXPENSE\n  CHECK_ATTENDANCE_ANOMALIES\n}\n\nenum AssistantTriggerType {\n  SCHEDULE // Runs at a specific time/interval (e.g., cron job)\n  EVENT // Runs when a specific event occurs (e.g., Sale created, Stock level changed)\n  MANUAL // Runs only when manually triggered\n}\n\nenum AssistantLogStatus {\n  PENDING // Task is scheduled or triggered but not yet running\n  RUNNING // Task is currently being executed\n  SUCCESS // Task completed successfully\n  FAILED // Task execution failed\n  WARNING // Task completed but with warnings or partial success\n}\n\nmodel Assistant {\n  id             String        @id @default(cuid())\n  organizationId String\n  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  name           String // e.g., \"Inventory Bot\", \"Reporting Assistant\"\n  description    String?\n  type           AssistantType @default(RULE_BASED)\n  isActive       Boolean       @default(true)\n  configuration  Json? // Specific settings, API keys, etc.\n  createdAt      DateTime      @default(now())\n  updatedAt      DateTime      @updatedAt\n\n  tasks AssistantTask[]\n  logs  AssistantLog[]\n\n  channel           Channel? // NEW: Link to the dedicated channel for this assistant\n  assistantMessages AssistantMessage[] // NEW: Messages involving this assistant\n\n  @@unique([organizationId, name])\n  @@index([organizationId])\n  @@map(\"assistant\")\n}\n\nmodel AssistantMessage {\n  id        String   @id @default(cuid())\n  content   String\n  isUser    Boolean // True if the message is from the user, false if from the assistant\n  createdAt DateTime @default(now())\n\n  channelId String\n  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)\n\n  memberId String // User who sent/received the message\n  user     Member @relation(fields: [memberId], references: [id], onDelete: Cascade)\n\n  assistantId String\n  assistant   Assistant @relation(fields: [assistantId], references: [id], onDelete: Cascade)\n\n  // Optional: Store metadata like tokens used, latency, model version etc.\n  metadata Json?\n\n  @@index([channelId])\n  @@index([memberId])\n  @@index([assistantId])\n  @@map(\"assistant_message\")\n}\n\nmodel AssistantTask {\n  id                   String               @id @default(cuid())\n  assistantId          String\n  assistant            Assistant            @relation(fields: [assistantId], references: [id], onDelete: Cascade)\n  name                 String // e.g., \"Daily Sales Report\", \"Low Stock PO Generator\"\n  description          String?\n  taskType             AssistantTaskType\n  triggerType          AssistantTriggerType\n  triggerConfiguration Json? // e.g., {\"cron\": \"0 1 * * *\"}, {\"event\": \"LOW_STOCK\", \"threshold\": 10}\n  actionConfiguration  Json? // e.g., {\"report_type\": \"SALES\", \"recipient\": \"manager@org.com\"}\n  isActive             Boolean              @default(true)\n  lastRunAt            DateTime?\n  nextRunAt            DateTime? // For scheduled tasks\n  createdAt            DateTime             @default(now())\n  updatedAt            DateTime             @updatedAt\n\n  logs AssistantLog[]\n\n  @@index([assistantId])\n  @@index([isActive, nextRunAt])\n  @@map(\"assistant_task\")\n}\n\nmodel AssistantLog {\n  id              String             @id @default(cuid())\n  assistantId     String\n  assistant       Assistant          @relation(fields: [assistantId], references: [id], onDelete: Cascade)\n  assistantTaskId String\n  task            AssistantTask      @relation(fields: [assistantTaskId], references: [id], onDelete: Cascade)\n  organizationId  String\n  organization    Organization       @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  startedAt       DateTime           @default(now())\n  finishedAt      DateTime?\n  status          AssistantLogStatus @default(PENDING)\n  details         String? // Human-readable log (e.g., \"Checked 50 variants, found 3 low.\")\n  output          Json? // e.g., {\"reportUrl\": \"...\", \"purchaseOrderId\": \"...\"}\n  errorMessage    String?\n\n  @@index([assistantTaskId])\n  @@index([organizationId, status])\n  @@index([startedAt])\n  @@map(\"assistant_log\")\n}\n\nmodel Purchase {\n  id             String         @id @default(cuid())\n  purchaseNumber String // Unique within an organization\n  supplierId     String\n  supplier       Supplier       @relation(fields: [supplierId], references: [id], onDelete: Restrict) // Prevent supplier deletion if purchases exist\n  memberId       String // Changed from userId\n  member         Member         @relation(fields: [memberId], references: [id]) // Changed relation name\n  orderDate      DateTime       @default(now())\n  expectedDate   DateTime?\n  receivedDate   DateTime? // Date when the entire order was fully received\n  totalAmount    Decimal        @db.Decimal(10, 2) // Should be calculated from items' totalCost\n  paidAmount     Decimal        @default(0) @db.Decimal(10, 2)\n  status         PurchaseStatus @default(ORDERED)\n  notes          String?\n  createdAt      DateTime       @default(now())\n  updatedAt      DateTime       @updatedAt\n  expenses       Expense[]\n\n  // Relations\n  items       PurchaseItem[]\n  payments    PurchasePayment[]\n  attachments Attachment[]\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade) // Added onDelete\n\n  // Enforce uniqueness per organization\n  @@unique([organizationId, purchaseNumber])\n  @@index([orderDate])\n  @@index([supplierId])\n  @@index([status])\n  @@index([organizationId])\n}\n\nmodel PurchaseItem {\n  id               String         @id @default(cuid())\n  purchaseId       String\n  purchase         Purchase       @relation(fields: [purchaseId], references: [id], onDelete: Cascade)\n  variantId        String\n  variant          ProductVariant @relation(fields: [variantId], references: [id], onDelete: Restrict)\n  orderedQuantity  Int\n  receivedQuantity Int            @default(0)\n  unitCost         Decimal        @db.Decimal(10, 2)\n  totalCost        Decimal        @db.Decimal(10, 2)\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n  stockBatches     StockBatch[]\n\n  // MODIFIED: orderedUnitId now points to SystemUnit\n  orderedUnitId String\n  orderedUnit   SystemUnit @relation(\"PIOrderUnit\", fields: [orderedUnitId], references: [id], onDelete: Restrict)\n\n  @@index([purchaseId])\n  @@index([variantId])\n}\n\nmodel PurchasePayment {\n  id            String        @id @default(cuid())\n  purchaseId    String\n  purchase      Purchase      @relation(fields: [purchaseId], references: [id], onDelete: Cascade) // Cascade delete with purchase\n  memberId      String // Changed from userId\n  member        Member        @relation(fields: [memberId], references: [id]) // Changed relation name\n  paymentDate   DateTime      @default(now())\n  amount        Decimal       @db.Decimal(10, 2)\n  paymentMethod PaymentMethod\n  reference     String? // e.g., Cheque number, transaction ID\n  notes         String?\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n\n  @@index([purchaseId])\n  @@index([paymentDate])\n  @@index([memberId])\n}\n\nmodel Return {\n  id           String       @id @default(cuid())\n  returnNumber String // Unique within an organization\n  saleId       String // The original sale ID\n  sale         Sale         @relation(fields: [saleId], references: [id], onDelete: Restrict) // Prevent sale deletion if returns exist\n  reason       ReturnReason // Overall reason for the return\n  status       ReturnStatus @default(PENDING)\n  notes        String?\n  processedAt  DateTime? // When the return was finalized (approved/rejected)\n  memberId     String // Who processed the return\n  member       Member       @relation(fields: [memberId], references: [id]) // Added relation to Member\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n\n  // Relations\n  items ReturnItem[] // List of items being returned\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade) // Added onDelete\n\n  // Enforce uniqueness per organization\n  @@unique([organizationId, returnNumber])\n  @@index([saleId])\n  @@index([status])\n  @@index([createdAt])\n  @@index([organizationId])\n}\n\nmodel ReturnItem {\n  id         String           @id @default(cuid())\n  returnId   String\n  return     Return           @relation(fields: [returnId], references: [id], onDelete: Cascade)\n  saleItemId String // Link to the specific item line from the original sale\n  saleItem   SaleItem         @relation(fields: [saleItemId], references: [id], onDelete: Restrict) // Prevent sale item deletion\n  quantity   Int // Quantity of this specific item being returned\n  reason     ReturnReason? // Optional: Item-specific reason, overrides main Return reason if set\n  status     ReturnItemStatus @default(PENDING) // Status for this specific item line\n  unitPrice  Decimal          @db.Decimal(10, 2) // Price at which it was sold (copied from SaleItem for history)\n  notes      String? // Item-specific notes\n\n  // and potentially creating a new 'returned' batch or adjusting via StockAdjustment\n  @@index([returnId])\n  @@index([saleItemId])\n}\n\nenum ReturnStatus {\n  PENDING // Return initiated, awaiting approval\n  APPROVED // Return request approved, items can be returned/refunded\n  REJECTED // Return request denied\n  PROCESSING // Items received, processing refund/replacement\n  COMPLETED // Refund/replacement issued, process finished\n}\n\nenum ReturnItemStatus {\n  PENDING // Waiting for item to be returned/inspected\n  RECEIVED // Item received by the store\n  ACCEPTED // Item accepted for refund/replacement\n  REJECTED // Item rejected (e.g., damaged by customer)\n  RESTOCKED // Item put back into stock (if applicable)\n  REFUNDED // Refund processed for this item\n  REPLACED // Replacement issued for this item\n}\n\nenum ReturnReason {\n  DEFECTIVE\n  WRONG_ITEM\n  NOT_AS_DESCRIBED\n  CHANGE_OF_MIND\n  SIZE_COLOR_ISSUE\n  ARRIVED_LATE\n  DUPLICATE_ORDER\n  DAMAGED_IN_TRANSIT\n  OTHER\n}\n\n// --- Inventory & Stock Models ---\n\nmodel InventoryLocation {\n  id                  String                  @id @default(cuid())\n  name                String\n  code                String?                 @unique\n  description         String?\n  isActive            Boolean                 @default(true)\n  isDefault           Boolean                 @default(false)\n  locationType        LocationType            @default(RETAIL_SHOP)\n  address             Json?\n  contact             Json?\n  capacity            Json?\n  settings            Json?\n  parentLocationId    String?\n  parentLocation      InventoryLocation?      @relation(\"LocationHierarchy\", fields: [parentLocationId], references: [id], onDelete: SetNull)\n  childLocations      InventoryLocation[]     @relation(\"LocationHierarchy\")\n  customFields        Json?\n  approvalConditions  ApprovalStepCondition[] @relation(\"LocationCondition\")\n  inventoryConditions ApprovalStepCondition[] @relation(\"InventoryLocationConditions\")\n  createdAt           DateTime                @default(now())\n  updatedAt           DateTime                @updatedAt\n  managerId           String?\n  manager             Member?                 @relation(\"LocationManager\", fields: [managerId], references: [id], onDelete: SetNull)\n  sales               Sale[]\n\n  organizationId    String\n  organization      Organization          @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  stockBatches      StockBatch[]\n  stockAdjustments  StockAdjustment[]\n  variantStocks     ProductVariantStock[]\n  outgoingMovements StockMovement[]       @relation(\"FromLocationMovements\")\n  incomingMovements StockMovement[]       @relation(\"ToLocationMovements\")\n\n  zones                  StorageZone[]\n  storageUnits           StorageUnit[]\n  checkedInMembers       Member[]\n  checkInAttendanceLogs  AttendanceLog[] @relation(\"CheckInLocationLogs\")\n  checkOutAttendanceLogs AttendanceLog[] @relation(\"CheckOutLocationLogs\")\n\n  defaultProducts Product[] @relation(\"ProductDefaultLocation\")\n  expenses        Expense[]\n  budgets         Budget[]\n  pickupOrders    Order[]   @relation(\"OrderPickupLocation\")\n\n  @@unique([organizationId, name])\n  @@index([name])\n  @@index([organizationId])\n  @@index([managerId])\n  @@index([locationType])\n  @@index([isDefault])\n  @@index([parentLocationId])\n}\n\nmodel StorageZone {\n  id           String            @id @default(cuid())\n  name         String // e.g., \"Zone A\", \"Electronics Section\"\n  description  String?\n  locationId   String\n  location     InventoryLocation @relation(fields: [locationId], references: [id], onDelete: Cascade)\n  capacity     Float?\n  capacityUnit MeasurementUnit?\n  capacityUsed Float?            @default(0)\n  isActive     Boolean           @default(true)\n  customFields Json?\n  createdAt    DateTime          @default(now())\n  updatedAt    DateTime          @updatedAt\n\n  // Relations\n  storageUnits   StorageUnit[]\n  organizationId String\n  organization   Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@unique([locationId, name])\n  @@index([locationId])\n  @@index([organizationId])\n}\n\nmodel StorageUnit {\n  id            String            @id @default(cuid())\n  name          String // e.g., \"Rack A1\", \"Bin B23\"\n  reference     String? // External reference number/barcode\n  unitType      StorageUnitType\n  locationId    String\n  location      InventoryLocation @relation(fields: [locationId], references: [id], onDelete: Cascade)\n  zoneId        String?\n  zone          StorageZone?      @relation(fields: [zoneId], references: [id], onDelete: SetNull)\n  width         Float? // Physical dimensions\n  height        Float?\n  depth         Float?\n  dimensionUnit String? // e.g., \"cm\", \"inches\"\n  maxWeight     Float? // Maximum weight capacity\n  weightUnit    String? // e.g., \"kg\", \"lbs\"\n  capacity      Float? // Storage capacity\n  capacityUnit  MeasurementUnit?\n  capacityUsed  Float?            @default(0)\n  isActive      Boolean           @default(true)\n  position      String? // Physical position reference (e.g., \"Aisle 5, Section B\")\n  customFields  Json?\n  createdAt     DateTime          @default(now())\n  updatedAt     DateTime          @updatedAt\n\n  // Relations\n  positions      StoragePosition[]\n  stockBatches   StockBatch[]      @relation(\"UnitStockBatches\") // Direct assignment to unit\n  organizationId String\n  organization   Organization      @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@unique([locationId, zoneId, name])\n  @@index([locationId])\n  @@index([zoneId])\n  @@index([unitType])\n  @@index([organizationId])\n}\n\nmodel StoragePosition {\n  id            String      @id @default(cuid())\n  identifier    String // e.g., \"A1-B2-C3\" (unit-shelf-position)\n  storageUnitId String\n  storageUnit   StorageUnit @relation(fields: [storageUnitId], references: [id], onDelete: Cascade)\n  width         Float? // Physical dimensions\n  height        Float?\n  depth         Float?\n  dimensionUnit String? // e.g., \"cm\", \"inches\"\n  maxWeight     Float? // Maximum weight capacity\n  weightUnit    String? // e.g., \"kg\", \"lbs\"\n  isOccupied    Boolean     @default(false)\n  customFields  Json?\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n\n  // Relations\n  stockBatches   StockBatch[] @relation(\"PositionStockBatches\")\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@unique([storageUnitId, identifier])\n  @@index([storageUnitId])\n  @@index([isOccupied])\n  @@index([organizationId])\n}\n\nmodel StockBatch {\n  id             String            @id @default(cuid())\n  variantId      String\n  variant        ProductVariant    @relation(fields: [variantId], references: [id], onDelete: Cascade)\n  batchNumber    String? // Manufacturer or internal batch number\n  purchaseItemId String? // Link to the purchase item that created this batch\n  purchaseItem   PurchaseItem?     @relation(fields: [purchaseItemId], references: [id], onDelete: SetNull)\n  locationId     String // Location where this batch is physically stored\n  location       InventoryLocation @relation(fields: [locationId], references: [id], onDelete: Restrict)\n\n  // Storage placement fields\n  storageUnitId String? // Which specific storage unit contains this batch\n  storageUnit   StorageUnit?     @relation(\"UnitStockBatches\", fields: [storageUnitId], references: [id], onDelete: SetNull)\n  positionId    String? // Which specific position within the unit\n  position      StoragePosition? @relation(\"PositionStockBatches\", fields: [positionId], references: [id], onDelete: SetNull)\n\n  initialQuantity Int // Quantity when the batch was created/received\n  currentQuantity Int // Current available quantity in this batch\n  purchasePrice   Decimal   @db.Decimal(10, 2) // Cost per unit for items in this batch\n  expiryDate      DateTime? // Expiry date for FEFO tracking\n  receivedDate    DateTime  @default(now()) // Date batch was added to inventory\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  spaceOccupied Float?\n  spaceUnit     MeasurementUnit?\n\n  // Relations\n  organizationId String\n  organization   Organization      @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  saleItems      SaleItem[] // Track which sales depleted this batch\n  adjustments    StockAdjustment[] // Adjustments specifically affecting this batch\n  movements      StockMovement[] // Track movements involving this batch\n\n  supplierId String?\n  supplier   Supplier? @relation(fields: [supplierId], references: [id], onDelete: SetNull)\n\n  landedCost     Decimal? @db.Decimal(10, 2) // Total cost including shipping, duties, etc.\n  batchSalePrice Decimal? @db.Decimal(10, 2) // Optional batch-specific sale price\n\n  @@index([expiryDate])\n  @@index([receivedDate])\n  @@index([currentQuantity])\n  @@index([locationId])\n  @@index([organizationId])\n  @@index([storageUnitId])\n  @@index([positionId])\n}\n\nmodel ProductVariantStock {\n  id             String            @id @default(cuid())\n  productId      String\n  product        Product           @relation(fields: [productId], references: [id], onDelete: Cascade)\n  variantId      String\n  variant        ProductVariant    @relation(fields: [variantId], references: [id], onDelete: Cascade)\n  locationId     String\n  location       InventoryLocation @relation(fields: [locationId], references: [id], onDelete: Cascade)\n  currentStock   Int               @default(0) // Total available stock\n  reservedStock  Int               @default(0) // Stock reserved but not yet deducted\n  availableStock Int               @default(0) // Calculated: currentStock - reservedStock\n  reorderPoint   Int               @default(5) // Location-specific reorder point\n  reorderQty     Int               @default(10) // Location-specific reorder quantity\n  lastUpdated    DateTime          @updatedAt\n\n  // Relations\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  // Only one stock record per variant per location\n  @@unique([variantId, locationId])\n  @@index([productId])\n  @@index([locationId])\n  @@index([organizationId])\n}\n\nmodel StockAdjustment {\n  id              String                @id @default(cuid())\n  variantId       String\n  variant         ProductVariant        @relation(fields: [variantId], references: [id], onDelete: Restrict)\n  stockBatchId    String?\n  stockBatch      StockBatch?           @relation(fields: [stockBatchId], references: [id], onDelete: SetNull)\n  locationId      String\n  location        InventoryLocation     @relation(fields: [locationId], references: [id], onDelete: Restrict)\n  memberId        String\n  member          Member                @relation(fields: [memberId], references: [id])\n  quantity        Int // Positive for increase, negative for decrease\n  reason          StockAdjustmentReason\n  notes           String?\n  adjustmentDate  DateTime              @default(now())\n  createdAt       DateTime              @default(now())\n  updatedAt       DateTime              @updatedAt\n  referenceNumber String? // Optional reference number for tracking\n\n  // Relations\n  movement       StockMovement? // Link to corresponding movement record\n  organizationId String\n  organization   Organization   @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@index([stockBatchId])\n  @@index([adjustmentDate])\n  @@index([locationId])\n  @@index([memberId])\n  @@index([organizationId])\n}\n\nenum StockAdjustmentReason {\n  INITIAL_STOCK // Setting up initial inventory count\n  RECEIVED_PURCHASE // Use StockBatch creation directly typically\n  DAMAGED // Item damaged while in stock\n  EXPIRED // Item expired while in stock\n  LOST // Item lost or unaccounted for\n  STOLEN // Item confirmed stolen\n  FOUND // Item previously lost/unaccounted for is found\n  RETURN_TO_SUPPLIER // Sending stock back to the supplier\n  CUSTOMER_RETURN // Receiving stock back from a customer (may create a new batch or adjust existing)\n  INVENTORY_COUNT // Adjustment due to physical stock count discrepancy\n  TRANSFER_OUT // Stock moved to another location (use StockMovement)\n  TRANSFER_IN // Stock received from another location (use StockMovement)\n  OTHER // Miscellaneous adjustments\n}\n\nmodel StockMovement {\n  id             String             @id @default(cuid())\n  variantId      String\n  variant        ProductVariant     @relation(fields: [variantId], references: [id], onDelete: Cascade)\n  stockBatchId   String?\n  stockBatch     StockBatch?        @relation(fields: [stockBatchId], references: [id], onDelete: SetNull)\n  quantity       Int // Always positive: the quantity that moved\n  fromLocationId String? // Source Location (null if coming from outside)\n  fromLocation   InventoryLocation? @relation(\"FromLocationMovements\", fields: [fromLocationId], references: [id], onDelete: SetNull)\n  toLocationId   String? // Destination Location (null if leaving tracked inventory)\n  toLocation     InventoryLocation? @relation(\"ToLocationMovements\", fields: [toLocationId], references: [id], onDelete: SetNull)\n  movementType   MovementType\n  referenceId    String? // ID of related record (Sale ID, Purchase ID, etc.)\n  referenceType  String? // Type of reference (e.g., \"Sale\", \"Purchase\", \"Adjustment\")\n  adjustmentId   String?            @unique // Link to adjustment if this was an adjustment\n  adjustment     StockAdjustment?   @relation(fields: [adjustmentId], references: [id], onDelete: SetNull)\n  memberId       String\n  member         Member             @relation(fields: [memberId], references: [id])\n  notes          String?\n  movementDate   DateTime           @default(now())\n  createdAt      DateTime           @default(now())\n\n  // Relations\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@index([stockBatchId])\n  @@index([fromLocationId])\n  @@index([toLocationId])\n  @@index([movementType, referenceId])\n  @@index([movementDate])\n  @@index([memberId])\n  @@index([organizationId])\n}\n\nenum MovementType {\n  PURCHASE_RECEIPT // Stock entering from a supplier purchase\n  SALE // Stock leaving due to a customer sale\n  ADJUSTMENT_IN // Stock increased via adjustment (found, count up)\n  ADJUSTMENT_OUT // Stock decreased via adjustment (damaged, lost, expired, count down)\n  TRANSFER // Stock moved between internal locations\n  CUSTOMER_RETURN // Stock returning from a customer\n  SUPPLIER_RETURN // Stock being sent back to a supplier\n  INITIAL_STOCK // Initial stock count entry\n  PRODUCTION_IN // Stock created from internal production (if applicable)\n  PRODUCTION_OUT // Components used in internal production (if applicable)\n}\n\n// --- Utility & Other Models ---\n\nmodel Attachment {\n  id          String   @id @default(cuid())\n  fileName    String\n  fileUrl     String // URL to access the file (e.g., S3 URL)\n  mimeType    String? // Changed from fileType (e.g., \"image/jpeg\", \"application/pdf\")\n  sizeBytes   Int? // Changed from fileSize\n  description String?\n  uploadedAt  DateTime @default(now())\n  memberId    String // Who uploaded it\n  member      Member   @relation(fields: [memberId], references: [id]) // Added relation to Member\n\n  // Polymorphic-like association (can belong to Sale OR Purchase, etc.)\n  relatedTo String // Model name (e.g., \"Sale\", \"Purchase\")\n  relatedId String // ID of the related record\n\n  // Relations (Original relations kept for potential direct linking, but polymorphic is more flexible)\n  saleId     String?\n  sale       Sale?     @relation(fields: [saleId], references: [id], onDelete: SetNull)\n  purchaseId String?\n  purchase   Purchase? @relation(fields: [purchaseId], references: [id], onDelete: SetNull)\n\n  // Added Organization relation\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  // Add polymorphic relations for expense management\n  expenseId          String?\n  expense            Expense?          @relation(fields: [expenseId], references: [id], onDelete: SetNull)\n  budgetId           String?\n  recurringExpenseId String?\n  recurringExpense   RecurringExpense? @relation(fields: [recurringExpenseId], references: [id], onDelete: SetNull)\n\n  @@index([relatedTo, relatedId])\n  @@index([saleId])\n  @@index([purchaseId])\n  @@index([memberId])\n  @@index([organizationId])\n}\n\nmodel CashDrawer {\n  id             String       @id @default(cuid())\n  name           String // Name for the drawer (e.g., \"Till 1\", \"Main Register\")\n  // locationId     String?      // Optional: Link to the physical location/terminal\n  // location       InventoryLocation? @relation(fields: [locationId], references: [id], onDelete: SetNull) // Added location relation\n  memberId       String\n  member         Member       @relation(fields: [memberId], references: [id])\n  openingAmount  Decimal      @db.Decimal(10, 2)\n  closingAmount  Decimal?     @db.Decimal(10, 2)\n  expectedAmount Decimal?     @db.Decimal(10, 2) // Calculated based on sales and opening amount\n  discrepancy    Decimal?     @db.Decimal(10, 2) // closingAmount - expectedAmount\n  notes          String?\n  openedAt       DateTime     @default(now())\n  closedAt       DateTime?\n  status         DrawerStatus @default(OPEN)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  // Relations\n  sales Sale[] // Sales processed during this drawer session\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade) // Added onDelete\n\n  // Drawer names unique per org\n  // Changed from userId\n  // @@index([locationId])\n  @@unique([organizationId, name])\n  @@index([openedAt])\n  @@index([closedAt])\n  @@index([memberId])\n  @@index([organizationId])\n}\n\nenum DrawerStatus {\n  OPEN // Drawer session is active\n  CLOSED // Drawer session ended, counts entered\n  BALANCED // Closed and closing amount matches expected amount\n  DISCREPANCY // Closed and closing amount does not match expected\n}\n\n// --- Audit Log Model --- (Generally good as is)\n\nenum AuditLogAction {\n  CREATE\n  UPDATE\n  DELETE\n  LOGIN\n  LOGOUT\n  INVITE\n  ACCESS_DENIED\n}\n\nenum AuditEntityType {\n  USER\n  MEMBER\n  ORGANIZATION\n  PRODUCT\n  CATEGORY\n  SUPPLIER\n  CUSTOMER\n  SALE\n  PURCHASE\n  RETURN\n  STOCK_BATCH\n  STOCK_ADJUSTMENT\n  STOCK_MOVEMENT\n  INVENTORY_LOCATION\n  CASH_DRAWER\n  LOYALTY\n  SETTINGS\n  OTHER\n  EXPENSE\n  BUDGET\n  PROJECT\n  RECURRING_EXPENSE\n  ATTENDANCE\n  AUTH_CHECK\n}\n\nmodel AuditLog {\n  id             String          @id @default(cuid())\n  organizationId String? // Changed from tenantId\n  organization   Organization?   @relation(fields: [organizationId], references: [id], onDelete: Cascade) // Added relation\n  memberId       String? // Changed from userId (who performed the action)\n  member         Member?         @relation(fields: [memberId], references: [id], onDelete: SetNull) // Keep log if member deleted\n  action         AuditLogAction\n  entityType     AuditEntityType // Changed from type\n  entityId       String? // ID of the entity that was affected\n  description    String // Human-readable description of the action\n  details        Json? // Changed from metadata (e.g., old/new values for UPDATE)\n  ipAddress      String?\n  userAgent      String?\n  performedAt    DateTime        @default(now())\n  expenseId      String?\n  expense        Expense?        @relation(fields: [expenseId], references: [id], onDelete: SetNull)\n  budgetId       String?\n  budget         Budget?         @relation(fields: [budgetId], references: [id], onDelete: SetNull)\n\n  recurringExpenseId String?\n  recurringExpense   RecurringExpense? @relation(fields: [recurringExpenseId], references: [id], onDelete: SetNull)\n  expenseApprovalId  String?\n\n  @@index([organizationId])\n  @@index([memberId])\n  @@index([entityType, entityId])\n  @@index([performedAt])\n  @@map(\"audit_log\")\n}\n\nenum PaymentMethod {\n  CASH\n  CREDIT_CARD\n  DEBIT_CARD\n  MOBILE_PAYMENT // e.g., Apple Pay, Google Pay, M-Pesa\n  BANK_TRANSFER\n  CHEQUE\n  STORE_CREDIT\n  GIFT_CARD\n  LOYALTY_POINTS\n  ON_ACCOUNT // Customer pays later\n  OTHER\n}\n\nenum PaymentStatus {\n  PENDING // Awaiting payment\n  COMPLETED // Fully paid\n  FAILED // Payment attempt failed\n  REFUNDED // Payment fully refunded\n  PARTIALLY_REFUNDED // Payment partially refunded\n  PARTIALLY_PAID // Payment partially refunded\n  CANCELLED // Payment was cancelled\n  VOIDED // Payment transaction was voided before settlement\n}\n\nenum PurchaseStatus {\n  DRAFT // Purchase order created but not yet sent\n  ORDERED // PO sent to supplier, awaiting items\n  PARTIALLY_RECEIVED // Some items received, but not all\n  RECEIVED // All items received\n  BILLED // Supplier invoice received (may happen before/after receiving)\n  PARTIALLY_PAID // Partial payment made towards the invoice\n  PAID // Invoice fully paid\n  COMPLETED // Order fully received and paid/closed\n  CANCELLED // Order cancelled before completion\n}\n\n// Added: Specific settings for an organization\n\nmodel OrganizationSettings {\n  id                String          @id @default(cuid())\n  organizationId    String          @unique // Enforces one-to-one\n  organization      Organization    @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  defaultCurrency   String          @default(\"USD\") // e.g., \"USD\", \"EUR\", \"GBP\"\n  defaultTimezone   String          @default(\"UTC\") // e.g., \"Africa/Nairobi\"\n  defaultTaxRate    Decimal?        @db.Decimal(5, 4) // Default tax rate for new products/sales\n  inventoryPolicy   InventoryPolicy @default(FEFO) // Added: FIFO, LIFO, or FEFO preference\n  lowStockThreshold Int             @default(10) // Default threshold for low stock alerts\n  negativeStock     Boolean         @default(false) // Allow selling into negative stock?\n  updatedAt         DateTime        @default(now()) @updatedAt\n\n  enableCapacityTracking    Boolean          @default(false) // Enable space management features\n  enforceSpatialConstraints Boolean          @default(false) // Prevent over-capacity situations\n  enableProductDimensions   Boolean          @default(false) // Track product dimensions\n  defaultMeasurementUnit    MeasurementUnit? // Default measurement unit for the org\n  defaultDimensionUnit      String? // e.g., \"cm\", \"inches\"\n  defaultWeightUnit         String? // e.g., \"kg\", \"lbs\"\n  defaultTaxId              String?\n\n  // --- Attendance Auto-Checkout Settings ---\n  enableAutoCheckout Boolean @default(false)\n  autoCheckoutTime   String? // Store as \"HH:mm\" in organization's local timezone (e.g., \"17:00\")\n\n  // --- End Attendance Auto-Checkout Settings ---\n  @@map(\"organization_settings\")\n}\n\nenum MeasurementUnit {\n  CUBIC_METER // m³ - Volume\n  CUBIC_FEET // ft³ - Volume\n  SQUARE_METER // m² - Area\n  SQUARE_FEET // ft² - Area\n  METER // m - Length (for shelving)\n  FEET // ft - Length (for shelving)\n  COUNT // Number of positions/slots\n  WEIGHT_KG // Weight capacity in kg\n  WEIGHT_LB // Weight capacity in lbs\n}\n\nenum StorageUnitType {\n  SHELF // Standard shelf\n  RACK // Pallet or other racking system\n  BIN // Smaller container within a shelf/rack\n  DRAWER // Pull-out storage\n  PALLET // Standalone pallet\n  SECTION // Demarcated area within a zone\n  REFRIGERATOR // Temperature controlled unit\n  FREEZER // Freezer unit\n  CABINET // Enclosed cabinet\n  BULK_AREA // Open area for bulk storage\n  OTHER // Other storage type\n}\n\nenum LocationType {\n  RETAIL_SHOP // A store front location where sales occur directly\n  WAREHOUSE // A storage facility primarily for inventory\n  DISTRIBUTION // Facility for receiving and distributing stock\n  PRODUCTION // Manufacturing facility\n  SUPPLIER // External supplier location (for reference)\n  CUSTOMER // External customer location (for reference)\n  TEMPORARY // Temporary or pop-up location\n  OTHER // Any other location type\n}\n\n// Added: Enum for inventory policy setting\n\nenum InventoryPolicy {\n  FIFO // First-In, First-Out (Based on receivedDate)\n  LIFO // Last-In, First-Out (Based on receivedDate)\n  FEFO // First-Expired, First-Out (Based on expiryDate, fallback to FIFO if no expiry)\n}\n\nmodel Expense {\n  id                 String             @id @default(cuid())\n  createdAt          DateTime           @default(now())\n  updatedAt          DateTime           @updatedAt\n  expenseNumber      String\n  description        String\n  amount             Decimal            @db.Decimal(10, 2)\n  expenseDate        DateTime           @default(now())\n  categoryId         String\n  category           ExpenseCategory    @relation(fields: [categoryId], references: [id], onDelete: Restrict)\n  paymentMethod      PaymentMethod\n  receiptUrl         String?\n  notes              String?\n  isReimbursable     Boolean            @default(false)\n  status             ExpenseStatus      @default(PENDING)\n  approvalDate       DateTime?\n  locationId         String?\n  location           InventoryLocation? @relation(fields: [locationId], references: [id], onDelete: SetNull)\n  memberId           String\n  member             Member             @relation(\"ExpenseSubmitter\", fields: [memberId], references: [id], onDelete: Restrict)\n  approverId         String?\n  approver           Member?            @relation(\"ExpenseApprover\", fields: [approverId], references: [id], onDelete: SetNull)\n  supplierId         String?\n  supplier           Supplier?          @relation(fields: [supplierId], references: [id], onDelete: SetNull)\n  organizationId     String\n  organization       Organization       @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  attachments        Attachment[]\n  auditLogs          AuditLog[]\n  purchaseId         String?\n  purchase           Purchase?          @relation(fields: [purchaseId], references: [id], onDelete: SetNull)\n  budgetId           String?\n  budget             Budget?            @relation(fields: [budgetId], references: [id], onDelete: SetNull)\n  approval           ExpenseApproval?   @relation(\"ExpenseApproval\")\n  recurringExpenseId String?\n  recurringExpense   RecurringExpense?  @relation(\"RecurringExpenseExpenses\", fields: [recurringExpenseId], references: [id], onDelete: SetNull)\n  tags               String[]\n  taxAmount          Decimal?           @db.Decimal(10, 2)\n  mileage            Float?\n  isBillable         Boolean            @default(false)\n\n  @@unique([organizationId, expenseNumber])\n  @@index([isBillable])\n  @@index([expenseDate])\n  @@index([memberId])\n  @@index([locationId])\n  @@index([organizationId])\n  @@index([status])\n}\n\nmodel ExpenseCategory {\n  id                 String                  @id @default(cuid())\n  name               String\n  description        String?\n  code               String? // Short code for reporting\n  color              String? // Hex color code for UI representation\n  isActive           Boolean                 @default(true)\n  requiresApproval   Boolean                 @default(false) // Whether expenses in this category require approval\n  defaultBudget      Float? // Default budget amount for this category\n  organizationId     String\n  organization       Organization            @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  expenses           Expense[]\n  recurringExpenses  RecurringExpense[]\n  approvalConditions ApprovalStepCondition[]\n\n  @@unique([organizationId, name])\n  @@index([organizationId])\n  @@index([isActive])\n}\n\nenum ExpenseStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  PAID\n  REIMBURSED\n}\n\nmodel RecurringExpense {\n  id            String              @id @default(cuid())\n  description   String\n  amount        Decimal             @db.Decimal(10, 2)\n  categoryId    String\n  category      ExpenseCategory     @relation(fields: [categoryId], references: [id])\n  paymentMethod PaymentMethod\n  frequency     RecurrenceFrequency\n  startDate     DateTime\n  endDate       DateTime?\n  isActive      Boolean             @default(true)\n  nextDueDate   DateTime // Calculated field\n\n  // Supplier if applicable\n  supplierId String?\n  supplier   Supplier? @relation(fields: [supplierId], references: [id], onDelete: SetNull)\n\n  // Relations\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdById    String\n  createdBy      Member       @relation(fields: [createdById], references: [id], onDelete: Restrict)\n\n  expenses     Expense[]      @relation(\"RecurringExpenseExpenses\")\n  auditLogs    AuditLog[]\n  executionLog ExecutionLog[]\n  attachments  Attachment[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizationId])\n  @@index([nextDueDate])\n  @@index([isActive])\n}\n\nenum RecurrenceFrequency {\n  DAILY\n  WEEKLY\n  BIWEEKLY\n  MONTHLY\n  QUARTERLY\n  YEARLY\n}\n\nmodel ExpenseApproval {\n  id           String         @id @default(cuid())\n  expenseId    String         @unique\n  expense      Expense        @relation(\"ExpenseApproval\", fields: [expenseId], references: [id], onDelete: Cascade) // Cascade delete approval if expense is deleted\n  approverId   String\n  approver     Member         @relation(\"ApproverMember\", fields: [approverId], references: [id], onDelete: Restrict) // Prevent approver deletion if they have pending approvals\n  status       ApprovalStatus @default(PENDING)\n  // Comments provided by the approver during decision.\n  comments     String?\n  decisionDate DateTime\n\n  // Standard fields\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  @@index([approverId])\n  @@index([status])\n  @@index([organizationId])\n}\n\nmodel ApprovalWorkflow {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(\"OrgWorkflows\", fields: [organizationId], references: [id], onDelete: Cascade)\n  name           String // e.g., \"Standard Expense Approval\", \"High Value Purchase Approval\"\n  description    String?\n  isActive       Boolean      @default(true) // Whether this workflow can be selected as the active one\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  steps ApprovalWorkflowStep[] // Ordered steps in the workflow\n\n  // Relation for tracking which orgs have this as active (optional, but useful)\n  activeForOrganizations       Organization[] @relation(\"ActiveOrgWorkflow\")\n  expenseApprovalOrganizations Organization[] @relation(\"ExpenseApprovalWorkflows\")\n\n  // departmentId String?\n  // department   Department? @relation(\"DepartmentWorkflows\", fields: [departmentId], references: [id], onDelete:SetNull)\n  // defaultForDepartment Department? @relation(\"DefaultDepartmentWorkflow\") // If this workflow is a default for a department\n  @@unique([organizationId, name])\n  @@index([organizationId, isActive])\n}\n\nmodel ApprovalWorkflowStep {\n  id                     String           @id @default(cuid())\n  approvalWorkflowId     String\n  workflow               ApprovalWorkflow @relation(fields: [approvalWorkflowId], references: [id], onDelete: Cascade)\n  stepNumber             Int // Order of the step (e.g., 1, 2, 3) - lower numbers first\n  name                   String // e.g., \"Manager Approval\", \"Finance Review\", \"Director Sign-off\"\n  description            String?\n  allConditionsMustMatch Boolean          @default(true) // If true, ALL conditions must match expense; if false, ANY condition match triggers step\n\n  conditions ApprovalStepCondition[] // Conditions that trigger this step\n  actions    ApprovalStepAction[] // Actions required for this step (who approves) min\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([approvalWorkflowId, stepNumber])\n}\n\nmodel ApprovalStepCondition {\n  id     String               @id @default(cuid())\n  stepId String\n  step   ApprovalWorkflowStep @relation(fields: [stepId], references: [id], onDelete: Cascade)\n  type   ConditionType // Type of condition (Amount, Category, Location, etc.)\n\n  // --- Condition Values (only relevant fields used based on 'type') ---\n  minAmount         Decimal?           @db.Decimal(12, 2) // Minimum expense amount (exclusive)\n  maxAmount         Decimal?           @db.Decimal(12, 2) // Maximum expense amount (inclusive)\n  locationId        String? // Link to specific location\n  location          InventoryLocation? @relation(\"LocationCondition\", fields: [locationId], references: [id], onDelete: SetNull) // Changed relation name\n  expenseCategoryId String? // Link to specific expense category\n  expenseCategory   ExpenseCategory?   @relation(fields: [expenseCategoryId], references: [id], onDelete: SetNull)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations for Member and InventoryLocation\n  members            Member[]            @relation(\"LocationConditions\")\n  inventoryLocations InventoryLocation[] @relation(\"InventoryLocationConditions\")\n\n  @@index([stepId])\n  @@index([expenseCategoryId])\n  @@index([locationId])\n}\n\nenum ConditionType {\n  AMOUNT_RANGE // Based on minAmount/maxAmount\n  EXPENSE_CATEGORY // Based on expenseCategoryId\n  LOCATION // Based on locationId\n  IS_REIMBURSABLE\n  PROJECT\n  HAS_RECEIPT\n}\n\n// Defines the required action (who needs to approve) for a step\nmodel ApprovalStepAction {\n  id     String               @id @default(cuid())\n  stepId String\n  step   ApprovalWorkflowStep @relation(fields: [stepId], references: [id], onDelete: Cascade)\n  type   ApprovalActionType // Type of approver required\n\n  approverRole     MemberRole? // Specific role required (e.g., MANAGER)\n  specificMemberId String? // Specific member ID required\n  specificMember   Member?     @relation(\"ApprovalStepActionMember\", fields: [specificMemberId], references: [id], onDelete: SetNull) // SetNull: Action becomes invalid if member deleted\n\n  // How multiple approvers (if any defined for the step) should act\n  approvalMode ApprovalMode @default(ANY_ONE) // Requires ANY_ONE or ALL matching approvers\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([stepId])\n  @@index([specificMemberId])\n}\n\nenum ApprovalActionType {\n  ROLE // Requires a member with a specific role\n  SPECIFIC_MEMBER // Requires a specific member\n  SUBMITTER_MANAGER\n  // Add others like: SUBMITTER_MANAGER (requires the submitter's direct manager - needs hierarchy logic elsewhere)\n}\n\nenum ApprovalMode {\n  ANY_ONE // Only one of the required approvers (matching type/role/id) needs to approve\n  ALL // All members matching the criteria for this step must approve (more complex to implement tracking)\n}\n\n// Consider refining ApprovalStatus if needed, e.g., adding REQUEST_INFO\n\nenum ApprovalStatus {\n  PENDING // Awaiting approver action.\n  APPROVED // Approver granted approval.\n  REJECTED // Approver denied approval.\n  REQUEST_CHANGES // Approver requests modification before approving.\n  REQUEST_INFO // Approver requests additional information before approving.\n}\n\nmodel Budget {\n  id          String   @id @default(cuid())\n  name        String\n  description String?\n  amount      Decimal  @db.Decimal(10, 2)\n  periodStart DateTime\n  periodEnd   DateTime\n  isActive    Boolean  @default(true)\n\n  locationId     String?\n  location       InventoryLocation? @relation(fields: [locationId], references: [id], onDelete: SetNull)\n  organizationId String\n  organization   Organization       @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdById    String\n  createdBy      Member             @relation(fields: [createdById], references: [id], onDelete: Restrict)\n\n  departmentId        String?\n  department          Department? @relation(\"DepartmentBudgets\", fields: [departmentId], references: [id], onDelete: SetNull)\n  activeForDepartment Department? @relation(\"DepartmentBudget\") // If this budget is the 'active' one for a department\n  expenses            Expense[]\n  auditLogs           AuditLog[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  fiscalYear Int? // Fiscal year this budget applies to\n  variance   Decimal?       @db.Decimal(10, 2)\n  reports    BudgetReport[]\n  alerts     BudgetAlert[]\n\n  @@unique([organizationId, name, periodStart, periodEnd])\n  @@index([fiscalYear])\n  @@index([departmentId])\n  @@index([organizationId])\n  @@index([isActive])\n}\n\nmodel BudgetReport {\n  id            String   @id @default(cuid())\n  budgetId      String\n  budget        Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)\n  reportDate    DateTime @default(now())\n  periodStart   DateTime\n  periodEnd     DateTime\n  totalSpent    Decimal  @db.Decimal(10, 2)\n  remaining     Decimal  @db.Decimal(10, 2)\n  variance      Decimal  @db.Decimal(10, 2)\n  notes         String?\n  generatedById String\n  generatedBy   Member   @relation(fields: [generatedById], references: [id], onDelete: Restrict)\n\n  // Add index\n  @@index([budgetId])\n  @@index([reportDate])\n}\n\nmodel BudgetAlert {\n  id         String   @id @default(cuid())\n  budgetId   String\n  budget     Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)\n  threshold  Decimal  @db.Decimal(5, 2) // Percentage (e.g., 80 = 80% of budget)\n  recipients String[] // Email addresses or member IDs to notify\n  isActive   Boolean  @default(true)\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([budgetId])\n  @@index([organizationId])\n}\n\nenum ProjectStatus {\n  PLANNING\n  ACTIVE\n  ON_HOLD\n  COMPLETED\n  CANCELLED\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  DECLINED\n  EXPIRED\n}\n\n// Automation model for configuring automated tasks\n\nenum TriggerType {\n  SCHEDULE // Time-based trigger (daily, weekly, etc.)\n  EVENT // Event-based trigger (e.g., low stock, new sale)\n  CONDITION // Condition-based trigger (when certain conditions are met)\n  MANUAL // Manually triggered by a user\n  API // Triggered via API call\n}\n\nenum ActionType {\n  CREATE_PURCHASE_ORDER // Create a purchase order for low stock items\n  SEND_NOTIFICATION // Send notification to staff\n  GENERATE_REPORT // Generate and send a report\n  UPDATE_INVENTORY // Update inventory levels\n  SEND_CUSTOMER_MESSAGE // Send message to customers\n  ADJUST_PRICING // Adjust product pricing\n  EXPORT_DATA // Export data to external system\n  RUN_ANALYSIS // Run data analysis\n  CUSTOM_ACTION // Custom action defined in actionConfig\n}\n\n// Logs for automation executions\n\nmodel ExecutionLog {\n  id           String          @id @default(cuid())\n  executedAt   DateTime        @default(now())\n  status       ExecutionStatus\n  details      Json? // Details about the execution\n  result       String? // Result of the execution\n  errorMessage String? // Error message if failed\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  recurringExpenseId String?\n  recurringExpense   RecurringExpense? @relation(fields: [recurringExpenseId], references: [id], onDelete: SetNull)\n\n  @@index([organizationId])\n  @@index([executedAt])\n  @@index([status])\n}\n\nenum ExecutionStatus {\n  PENDING\n  IN_PROGRESS\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\nmodel Notification {\n  id          String           @id @default(cuid())\n  type        NotificationType // e.g., \"invitation\", \"mention\", \"announcement\"\n  title       String\n  description String\n  read        Boolean          @default(false)\n  link        String? // Optional URL link associated with the notification\n  createdAt   DateTime         @default(now())\n\n  // --- Recipient ---\n  // EITHER link to a registered User OR store the target email\n  userId         String? // Foreign key for registered user\n  recipientEmail String? // Email address for unregistered users/invitations\n\n  // Relation to the User model (optional)\n  user User? @relation(fields: [userId], references: [id], onDelete: Cascade) // Optional: Cascade delete notifications if user is deleted\n\n  // --- Sender Information (Optional) ---\n  senderId String?\n  member   Member? @relation(fields: [senderId], references: [id], onDelete: Cascade) // Optional: Cascade delete notifications if user is deleted\n\n  expenseUserId  String? // Add this field\n  userExpense    User?         @relation(\"UserExpenseNotifications\", fields: [expenseUserId], references: [id], onDelete: Cascade)\n  organizationId String?\n  organization   Organization? @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  // --- Type-Specific Details ---\n  // Use a JSON field to store variable data based on notification type\n  // Examples: { \"organization\": \"Acme Corp\", \"role\": \"Developer\" } for invitations\n  //           { \"meetingTime\": \"Tomorrow, 10:00 AM PST\" } for reminders\n  details        Json?\n\n  // --- Indexes for Performance ---\n  // Index for quickly finding notifications for a specific user\n  // Index for finding notifications sent to a specific email\n  // Index for filtering read/unread notifications\n  // Index for sorting by creation time\n  @@index([userId])\n  @@index([recipientEmail])\n  @@index([read])\n  @@index([createdAt])\n}\n\n// Enum for Notification Types\n\nenum NotificationType {\n  INVITATION\n  MENTION\n  ANNOUNCEMENT\n  REMINDER\n  TASK_UPDATE\n  SYSTEM_ALERT\n  NEW_MEMBER\n  WELCOME\n  INVITATION_ACCEPTED\n  INVITATION_DECLINED\n  EXPENSE_SUBMITTED\n  EXPENSE_APPROVAL\n  EXPENSE_REJECTED\n  EXPENSE_PAID\n  BUDGET_ALERT\n  BUDGET_THRESHOLD\n}\n\nmodel MpesaPaymentRequest {\n  id                 String    @id @default(cuid())\n  organizationId     String\n  memberId           String\n  checkoutRequestId  String\n  merchantRequestId  String\n  amount             Decimal\n  phoneNumber        String\n  reference          String\n  status             String // PENDING, SUCCESS, FAILED\n  resultCode         Int?\n  resultDescription  String?\n  mpesaReceiptNumber String?\n  transactionDate    DateTime?\n  saleData           Json? // Store the sale data for processing after successful payment\n  createdAt          DateTime  @default(now())\n  updatedAt          DateTime  @updatedAt\n  saleNumber         String?\n\n  organization Organization @relation(fields: [organizationId], references: [id])\n  member       Member       @relation(fields: [memberId], references: [id])\n\n  @@index([organizationId])\n  @@index([memberId])\n  @@index([checkoutRequestId])\n  @@index([merchantRequestId])\n  @@index([reference])\n}\n\nmodel AttendanceLog {\n  id                 String             @id @default(cuid())\n  memberId           String\n  member             Member             @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  organizationId     String\n  organization       Organization       @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  checkInTime        DateTime\n  checkOutTime       DateTime?\n  checkInLocationId  String // Now references InventoryLocation\n  checkInLocation    InventoryLocation  @relation(\"CheckInLocationLogs\", fields: [checkInLocationId], references: [id], onDelete: Restrict)\n  checkOutLocationId String? // Optional: if checkout can happen at a different location\n  checkOutLocation   InventoryLocation? @relation(\"CheckOutLocationLogs\", fields: [checkOutLocationId], references: [id], onDelete: Restrict)\n  durationMinutes    Int? // Calculated when member checks out\n  notes              String?\n  isAutoCheckout     Boolean            @default(false) // To flag if this was an auto checkout\n  createdAt          DateTime           @default(now())\n  updatedAt          DateTime           @updatedAt\n\n  activeMemberCheckIn Member? @relation(\"ActiveCheckIn\") // Link to Member's current active log\n\n  @@index([memberId])\n  @@index([organizationId])\n  @@index([checkInTime])\n  @@index([checkOutTime])\n  @@index([checkInLocationId])\n  @@map(\"attendance_log\")\n}\n\nmodel Apikey {\n  id                  String    @id\n  name                String?\n  start               String?\n  prefix              String?\n  key                 String\n  userId              String\n  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  refillInterval      Int?\n  refillAmount        Int?\n  lastRefillAt        DateTime?\n  enabled             Boolean?\n  rateLimitEnabled    Boolean?\n  rateLimitTimeWindow Int?\n  rateLimitMax        Int?\n  requestCount        Int?\n  remaining           Int?\n  lastRequest         DateTime?\n  expiresAt           DateTime?\n  createdAt           DateTime\n  updatedAt           DateTime\n  permissions         String?\n  metadata            String?\n\n  @@map(\"apikey\")\n}\n\n// --- Authentication & Authorization Models --- (Mostly standard)\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\nmodel Session {\n  id             String   @id\n  expiresAt      DateTime\n  token          String   @unique\n  createdAt      DateTime\n  updatedAt      DateTime\n  ipAddress      String?\n  userAgent      String?\n  userId         String\n  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  impersonatedBy String?\n\n  activeOrganizationId String?\n\n  @@map(\"session\")\n}\n\n// Organization-specific custom roles\n\nmodel CustomRole {\n  id             String       @id @default(cuid())\n  name           String\n  description    String?\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  permissions    String[] // Array of permission strings, e.g., [\"product:create\", \"sale:view\"]\n\n  // For many-to-many with Member if a member can have multiple custom roles\n  members  Member[] @relation(\"MemberCustomRoles\")\n  isActive Boolean  @default(true)\n\n  isSystemRole Boolean  @default(false) // True for roles like \"Cashier\" if you want them modifiable\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  @@unique([organizationId, name])\n  @@map(\"custom_role\")\n}\n\nmodel RoleTemplate {\n  id          String   @id @default(cuid())\n  name        String   @unique // e.g., \"Store Manager\", \"Accountant\"\n  description String\n  permissions String[] // Array of permission strings\n  usageCount  Int      @default(0) // Tracks how many orgs use this template\n  createdAt   DateTime @default(now())\n\n  @@map(\"role_template\")\n}\n\nenum Status {\n  ONLINE\n  OFFLINE\n}\n\nenum ChannelType {\n  CHANNEL\n  SUBCHANNEL\n  DIRECT_MESSAGE\n}\n\nmodel Channel {\n  id                 String      @id @default(cuid())\n  name               String\n  icon               String?\n  type               ChannelType @default(CHANNEL)\n  isGeneral          Boolean     @default(false)\n  isPublic           Boolean     @default(true)\n  isAssistantChannel Boolean     @default(false)\n  createdAt          DateTime    @default(now())\n  creatorId          String // Add foreign key field for creator\n  creator            Member      @relation(\"ChannelCreator\", fields: [creatorId], references: [id]) // Define relation with fields and references\n  updatedAt          DateTime    @updatedAt\n\n  messages        Message[]\n  parent          Channel?        @relation(\"SubChannels\", fields: [parentId], references: [id])\n  parentId        String?\n  subChannels     Channel[]       @relation(\"SubChannels\")\n  members         ChannelMember[] @relation(\"ChannelMembers\")\n  favoriteFor     Favorite[]\n  linkedThreads   ThreadLink[]    @relation(\"SourceThread\")\n  linkedByThreads ThreadLink[]    @relation(\"TargetThread\")\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  assistantId String?    @unique\n  assistant   Assistant? @relation(fields: [assistantId], references: [id], onDelete: SetNull)\n\n  assistantMessages AssistantMessage[]\n  invitations       Invitation[] // Add relation for guest invitations\n\n  // Add index for the foreign key\n  @@index([organizationId])\n  @@index([isPublic])\n  @@index([isAssistantChannel])\n  @@index([creatorId])\n}\n\nmodel ChannelMember {\n  id        String   @id @default(cuid())\n  memberId  String\n  channelId String\n  joinedAt  DateTime @default(now())\n  member    Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  channel   Channel  @relation(\"ChannelMembers\", fields: [channelId], references: [id], onDelete: Cascade)\n\n  @@unique([memberId, channelId])\n  @@index([memberId])\n  @@index([channelId])\n}\n\n// Message model: Represents individual chat messages.\n\nmodel Message {\n  id              String                  @id @default(cuid())\n  content         String\n  createdAt       DateTime                @default(now())\n  updatedAt       DateTime                @updatedAt\n  memberId        String // Changed from userId\n  channelId       String\n  sender          Member                  @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  channel         Channel                 @relation(fields: [channelId], references: [id], onDelete: Cascade)\n  reactions       Reaction[]\n  attachments     ChatMessageAttachment[]\n  mentions        Mention[]\n  hashtags        Hashtag[]\n  parentMessage   Message?                @relation(\"Thread\", fields: [parentMessageId], references: [id])\n  parentMessageId String?\n  replies         Message[]               @relation(\"Thread\")\n\n  @@index([memberId])\n  @@index([channelId])\n  @@index([parentMessageId])\n}\n\n// Reaction model: Represents emoji reactions to messages.\n\nmodel Reaction {\n  id        String   @id @default(cuid())\n  emoji     String // The emoji character\n  messageId String\n  memberId  String\n  createdAt DateTime @default(now())\n  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  user      Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)\n\n  // Ensure a user can only react once with the same emoji\n  @@unique([messageId, memberId, emoji])\n  @@index([messageId])\n  @@index([memberId])\n}\n\nmodel ChatMessageAttachment {\n  id        String  @id @default(cuid())\n  name      String\n  url       String // URL or path to the file\n  type      String // File type (e.g., \"image\", \"figma\", \"pdf\")\n  size      Int // Size in bytes\n  messageId String\n  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)\n\n  // Map to a clear table name\n  @@index([messageId])\n  @@map(\"chat_message_attachment\")\n}\n\n// Mention model: Links messages to mentioned users.\n\nmodel Mention {\n  id        String  @id @default(cuid())\n  messageId String\n  memberId  String\n  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  member    Member  @relation(fields: [memberId], references: [id], onDelete: Cascade)\n\n  @@unique([messageId, memberId])\n  @@index([messageId])\n  @@index([memberId])\n}\n\nmodel Hashtag {\n  id       String    @id @default(cuid())\n  tag      String    @unique // The hashtag text (e.g., #design)\n  messages Message[] // Messages using this hashtag\n}\n\n// Favorite model: Links users to their favorite channels/DMs.\n\nmodel Favorite {\n  id        String  @id @default(cuid())\n  userId    String\n  channelId String\n  user      Member  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, channelId])\n  @@index([userId])\n  @@index([channelId])\n}\n\n// ThreadLink model: Represents links between channels (threads).\n\nmodel ThreadLink {\n  id             String @id @default(cuid())\n  sourceThreadId String\n  targetThreadId String\n\n  sourceThread Channel @relation(\"SourceThread\", fields: [sourceThreadId], references: [id], onDelete: Cascade)\n  targetThread Channel @relation(\"TargetThread\", fields: [targetThreadId], references: [id], onDelete: Cascade)\n\n  @@unique([sourceThreadId, targetThreadId])\n}\n\n// --- Accounting Models (Revised for Simplicity & Robustness) ---\n\nenum AccountClass {\n  ASSET\n  LIABILITY\n  EQUITY\n  REVENUE\n  EXPENSE\n}\n\nmodel AccountType {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  name        String // e.g., \"Current Asset\", \"Long-term Liability\"\n  class       AccountClass\n  description String?\n\n  accounts FinancialAccount[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([organizationId, name])\n  @@map(\"account_types\")\n}\n\nmodel FinancialAccount {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  code        String\n  name        String\n  description String?\n\n  accountTypeId String\n  accountType   AccountType @relation(fields: [accountTypeId], references: [id], onDelete: Restrict)\n\n  parentId String?\n  parent   FinancialAccount?  @relation(\"AccountHierarchy\", fields: [parentId], references: [id], onDelete: Restrict)\n  children FinancialAccount[] @relation(\"AccountHierarchy\")\n\n  isActive     Boolean @default(true)\n  currencyCode String  @default(\"USD\")\n\n  isControlAccount Boolean @default(false)\n\n  journalEntries  JournalEntry[]\n  reconciliations AccountReconciliation[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([organizationId, code])\n  @@unique([organizationId, name])\n  @@index([organizationId, accountTypeId])\n  @@map(\"accounts\")\n}\n\nmodel FiscalPeriod {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  name      String\n  code      String\n  startDate DateTime\n  endDate   DateTime\n  status    PeriodStatus @default(OPEN)\n  type      PeriodType   @default(MONTHLY)\n\n  journals Journal[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([organizationId, code])\n  @@map(\"fiscal_periods\")\n}\n\nenum PeriodStatus {\n  OPEN\n  CLOSED\n  LOCKED\n}\n\nenum PeriodType {\n  MONTHLY\n  QUARTERLY\n  YEARLY\n}\n\nmodel Journal {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  reference   String\n  description String\n  date        DateTime\n  postingDate DateTime?\n\n  type           JournalType   @default(GENERAL)\n  status         JournalStatus @default(DRAFT)\n  fiscalPeriodId String\n  fiscalPeriod   FiscalPeriod  @relation(fields: [fiscalPeriodId], references: [id], onDelete: Restrict)\n\n  currencyCode String         @default(\"USD\")\n  entries      JournalEntry[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String?\n\n  @@unique([organizationId, reference])\n  @@index([organizationId, date, status])\n  @@map(\"journals\")\n}\n\nenum JournalType {\n  GENERAL\n  SALES\n  PURCHASE\n  CASH_RECEIPTS\n  CASH_PAYMENTS\n  ADJUSTING\n  CLOSING\n}\n\nenum JournalStatus {\n  DRAFT\n  POSTED\n  REVERSED\n}\n\nmodel JournalEntry {\n  id        String  @id @default(cuid())\n  journalId String\n  journal   Journal @relation(fields: [journalId], references: [id], onDelete: Cascade)\n\n  accountId String\n  account   FinancialAccount @relation(fields: [accountId], references: [id], onDelete: Restrict)\n\n  amount Decimal   @db.Decimal(15, 2)\n  type   EntryType\n\n  description String?\n\n  lineNumber Int\n\n  @@index([accountId])\n  @@index([journalId])\n  @@map(\"journal_entries\")\n}\n\nenum EntryType {\n  DEBIT\n  CREDIT\n}\n\nmodel AccountReconciliation {\n  id        String           @id @default(cuid())\n  accountId String\n  account   FinancialAccount @relation(fields: [accountId], references: [id])\n\n  statementDate    DateTime\n  statementBalance Decimal  @db.Decimal(15, 2)\n  bookBalance      Decimal  @db.Decimal(15, 2)\n\n  status ReconciliationStatus @default(PENDING)\n\n  // Reconciliation details\n  reconciledBy String?\n  reconciledAt DateTime?\n  notes        String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"account_reconciliations\")\n}\n\nenum ReconciliationStatus {\n  PENDING\n  IN_PROGRESS\n  RECONCILED\n  DISCREPANCY\n}\n\nmodel Report {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  type           ReportType\n  data           Json\n  summary        String?      @db.Text // For storing AI-generated summary\n  startDate      DateTime\n  endDate        DateTime\n  generatedAt    DateTime     @default(now())\n  generatedById  String\n  generatedBy    Member       @relation(fields: [generatedById], references: [id])\n\n  @@unique([organizationId, type, startDate, endDate])\n  @@index([organizationId, type])\n  @@map(\"reports\")\n}\n\nenum ReportType {\n  SALES_REPORT\n  INVENTORY_REPORT\n  EXPENSE_REPORT\n}\n\nmodel Subscription {\n  id                   String       @id @default(cuid())\n  organizationId       String       @unique\n  organization         Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  dodoCustomerId       String?      @unique @map(\"dodo_customer_id\")\n  dodoSubscriptionId   String?      @unique @map(\"dodo_subscription_id\")\n  dodoPriceId          String?      @map(\"dodo_price_id\")\n  dodoCurrentPeriodEnd DateTime?    @map(\"dodo_current_period_end\")\n\n  @@map(\"subscriptions\")\n}\n\nmodel Jwks {\n  id         String   @id\n  publicKey  String\n  privateKey String\n  createdAt  DateTime\n\n  @@map(\"jwks\")\n}\n\nmodel ReferralProgram {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  name           String\n  description    String?\n  isActive       Boolean      @default(true)\n  referrerReward Int // Points awarded to the referrer\n  refereeReward  Int // Points awarded to the new user (referee)\n  rewardType     String       @default(\"points\") // e.g., points, discount, etc.\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n  referrals      Referral[]\n\n  @@unique([organizationId, name])\n  @@map(\"referral_program\")\n}\n\nmodel Referral {\n  id             String          @id @default(cuid())\n  organizationId String\n  organization   Organization    @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  referrerId     String // The User who made the referral\n  referrer       User            @relation(\"ReferredBy\", fields: [referrerId], references: [id], onDelete: Cascade)\n  refereeId      String          @unique // The new User who was referred\n  referee        User            @relation(\"ReferredUser\", fields: [refereeId], references: [id], onDelete: Cascade)\n  programId      String\n  program        ReferralProgram @relation(fields: [programId], references: [id])\n\n  // UPDATED: More descriptive status\n  status String @default(\"pending_verification\") // e.g., pending_verification, verified, first_purchase_completed\n\n  // NEW: Track if the first purchase has been made to prevent duplicate point awards\n  firstPurchaseMade Boolean @default(false)\n\n  rewardApplied Boolean  @default(false)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  @@index([referrerId])\n  @@index([refereeId])\n  @@map(\"referral\")\n}\n\n// --- Loyalty System Models ---\n\nmodel LoyaltyPointsConfig {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  // UPDATED: More specific action types\n  actionType LoyaltyActionType\n\n  points      Int // The number of points to award for the action\n  description String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@unique([organizationId, actionType])\n  @@map(\"loyalty_points_config\")\n}\n\nmodel LoyaltyProgram {\n  id              String        @id @default(cuid())\n  organizationId  String        @unique\n  organization    Organization  @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  name            String\n  pointsPerDollar Float         @default(1) // How many points are earned per dollar spent\n  redemptionRate  Float         @default(0.01) // How much one point is worth in dollars\n  isActive        Boolean       @default(true)\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  tiers           LoyaltyTier[]\n\n  @@map(\"loyalty_program\")\n}\n\nmodel LoyaltyTier {\n  id              String         @id @default(cuid())\n  programId       String\n  program         LoyaltyProgram @relation(fields: [programId], references: [id], onDelete: Cascade)\n  name            String // e.g., Bronze, Silver, Gold\n  minPoints       Int // Minimum points to enter this tier\n  pointMultiplier Float          @default(1.0) // e.g., 1.2x points for Gold members\n  benefits        String[] // Array of text descriptions of benefits\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n  customers       Customer[]\n\n  @@unique([programId, name])\n  @@map(\"loyalty_tier\")\n}\n\nmodel LoyaltyTransaction {\n  id              String            @id @default(cuid())\n  createdAt       DateTime          @default(now())\n  updatedAt       DateTime          @updatedAt\n  customerId      String\n  customer        Customer          @relation(fields: [customerId], references: [id], onDelete: Cascade) // Cascade if customer deleted\n  memberId        String // Changed from userId\n  member          Member            @relation(fields: [memberId], references: [id], onDelete: Restrict) // Prevent member deletion if they issued points\n  pointsChange    Int // Positive for earned, negative for redeemed\n  actionType      LoyaltyActionType @default(SALE_EARNED)\n  relatedSaleId   String?           @unique // Link to the sale that earned/used points\n  relatedSale     Sale?             @relation(fields: [relatedSaleId], references: [id], onDelete: SetNull) // Keep record if sale deleted\n  notes           String?\n  transactionDate DateTime          @default(now())\n\n  // Added Organization relation for data isolation/querying\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@index([customerId])\n  @@index([transactionDate])\n  @@index([memberId])\n  @@index([organizationId])\n}\n\nenum LoyaltyActionType {\n  SALE_EARNED // Points earned from a purchase\n  REDEMPTION // Points spent on a purchase or reward\n  MANUAL_ADJUSTMENT // Admin adjustment (correction, bonus)\n  PROMOTION // Points awarded from a specific promotion\n  SIGN_UP_BONUS // Points for new customer registration\n  RETURN_ADJUSTMENT // Points deducted due to a returned item\n  BIRTHDAY_BONUS // Points awarded for customer's birthday\n  REFERRAL_BONUS // Points for referring a new customer\n  REFERRAL_FIRST_PURCHASE // Points for referring a new customer\n  REFERRAL_SIGNUP_VERIFIED // Points for referring a new customer\n  OTHER // Miscellaneous reasons\n}\n\nmodel Driver {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  memberId       String       @unique // Link to the Member model\n  member         Member       @relation(fields: [memberId], references: [id], onDelete: Cascade)\n\n  availability    DriverStatus @default(OFFLINE)\n  currentLocation String? // Could be lat/long\n  phone           String\n\n  vehicleId String?  @unique\n  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id], onDelete: SetNull)\n\n  deliveries Delivery[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizationId])\n  @@map(\"driver\")\n}\n\n/**\n * Represents a vehicle used for deliveries.\n */\nmodel Vehicle {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  driver Driver?\n\n  make         String // e.g., \"Toyota\"\n  model        String // e.g., \"Corolla\"\n  licensePlate String      @unique\n  color        String?\n  type         VehicleType @default(CAR)\n\n  isActive Boolean @default(true)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizationId])\n  @@map(\"vehicle\")\n}\n\n/**\n * Represents a single delivery instance.\n * Linked to an order.\n */\nmodel Delivery {\n  id             String       @id @default(cuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  orderId String @unique\n  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  driverId String?\n  driver   Driver? @relation(fields: [driverId], references: [id], onDelete: SetNull)\n\n  status DeliveryStatus @default(PENDING)\n\n  // Addresses\n  pickupAddress   Json // From restaurant/location\n  deliveryAddress Json // To customer\n\n  // Timestamps\n  assignedAt            DateTime? // When a driver is assigned\n  pickedUpAt            DateTime? // When the driver picks up the order\n  deliveredAt           DateTime? // When the order is delivered\n  estimatedDeliveryTime DateTime?\n\n  deliveryFee   Decimal @default(0) @db.Decimal(10, 2)\n  driverNotes   String?\n  customerNotes String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizationId])\n  @@index([driverId])\n  @@index([status])\n  @@map(\"delivery\")\n}\n\n// --- Enums to add to your schema.prisma ---\n\nenum DriverStatus {\n  ONLINE // Available for deliveries\n  OFFLINE // Not available\n  ON_DELIVERY // Currently on a delivery\n}\n\nenum VehicleType {\n  MOTORCYCLE\n  CAR\n  VAN\n  BICYCLE\n}\n\nenum DeliveryStatus {\n  PENDING // Waiting for a driver\n  ACCEPTED // Driver has accepted the delivery\n  PICKING_UP // Driver is on the way to the restaurant\n  AT_PICKUP // Driver has arrived at the restaurant\n  IN_TRANSIT // Order has been picked up and is on its way\n  DELIVERED // Order has been delivered to the customer\n  CANCELLED // Delivery was cancelled\n  FAILED_DELIVERY // Delivery attempt failed\n}\n",
  "inlineSchemaHash": "119a203139e61e237dcacbe10a2331c5023d2848efaf63cd2453934292624280",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToUser\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"activeOrganizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"expenseNotifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"UserExpenseNotifications\"},{\"name\":\"displayUsername\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apikeys\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyToUser\"},{\"name\":\"referralCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserReferrer\"},{\"name\":\"referees\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserReferrer\"},{\"name\":\"referralsMade\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"ReferredBy\"},{\"name\":\"referredBy\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"ReferredUser\"}],\"dbName\":\"user\"},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultWarehouseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrganization\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToOrganization\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrganizationToProduct\"},{\"name\":\"suppliers\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"OrganizationToSupplier\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"OrganizationToSale\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrganization\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"OrganizationToPurchase\"},{\"name\":\"returns\",\"kind\":\"object\",\"type\":\"Return\",\"relationName\":\"OrganizationToReturn\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"OrganizationToStockBatch\"},{\"name\":\"inventoryLocations\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToOrganization\"},{\"name\":\"productVariantStocks\",\"kind\":\"object\",\"type\":\"ProductVariantStock\",\"relationName\":\"OrganizationToProductVariantStock\"},{\"name\":\"stockAdjustments\",\"kind\":\"object\",\"type\":\"StockAdjustment\",\"relationName\":\"OrganizationToStockAdjustment\"},{\"name\":\"stockMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"OrganizationToStockMovement\"},{\"name\":\"cashDrawers\",\"kind\":\"object\",\"type\":\"CashDrawer\",\"relationName\":\"CashDrawerToOrganization\"},{\"name\":\"loyaltyTransactions\",\"kind\":\"object\",\"type\":\"LoyaltyTransaction\",\"relationName\":\"LoyaltyTransactionToOrganization\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToOrganization\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToOrganization\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"OrganizationSettings\",\"relationName\":\"OrganizationToOrganizationSettings\"},{\"name\":\"executionLogs\",\"kind\":\"object\",\"type\":\"ExecutionLog\",\"relationName\":\"ExecutionLogToOrganization\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToOrganization\"},{\"name\":\"storageZones\",\"kind\":\"object\",\"type\":\"StorageZone\",\"relationName\":\"OrganizationToStorageZone\"},{\"name\":\"storageUnits\",\"kind\":\"object\",\"type\":\"StorageUnit\",\"relationName\":\"OrganizationToStorageUnit\"},{\"name\":\"storagePositions\",\"kind\":\"object\",\"type\":\"StoragePosition\",\"relationName\":\"OrganizationToStoragePosition\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToOrganization\"},{\"name\":\"budgets\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToOrganization\"},{\"name\":\"recurringExpenses\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"OrganizationToRecurringExpense\"},{\"name\":\"expenseApprovals\",\"kind\":\"object\",\"type\":\"ExpenseApproval\",\"relationName\":\"ExpenseApprovalToOrganization\"},{\"name\":\"budgetAlerts\",\"kind\":\"object\",\"type\":\"BudgetAlert\",\"relationName\":\"BudgetAlertToOrganization\"},{\"name\":\"departments\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToOrganization\"},{\"name\":\"expenseCategories\",\"kind\":\"object\",\"type\":\"ExpenseCategory\",\"relationName\":\"ExpenseCategoryToOrganization\"},{\"name\":\"expenseApprovalRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expenseApprovalThreshold\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expenseReceiptRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expenseReceiptThreshold\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"activeExpenseWorkflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeExpenseWorkflow\",\"kind\":\"object\",\"type\":\"ApprovalWorkflow\",\"relationName\":\"ActiveOrgWorkflow\"},{\"name\":\"approvalWorkflows\",\"kind\":\"object\",\"type\":\"ApprovalWorkflow\",\"relationName\":\"OrgWorkflows\"},{\"name\":\"expenseApprovalWorkflows\",\"kind\":\"object\",\"type\":\"ApprovalWorkflow\",\"relationName\":\"ExpenseApprovalWorkflows\"},{\"name\":\"defaultExpenseCurrency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseTagOptions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistants\",\"kind\":\"object\",\"type\":\"Assistant\",\"relationName\":\"AssistantToOrganization\"},{\"name\":\"assistantLogs\",\"kind\":\"object\",\"type\":\"AssistantLog\",\"relationName\":\"AssistantLogToOrganization\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"FinancialAccount\",\"relationName\":\"FinancialAccountToOrganization\"},{\"name\":\"journals\",\"kind\":\"object\",\"type\":\"Journal\",\"relationName\":\"JournalToOrganization\"},{\"name\":\"fiscalPeriods\",\"kind\":\"object\",\"type\":\"FiscalPeriod\",\"relationName\":\"FiscalPeriodToOrganization\"},{\"name\":\"accountTypes\",\"kind\":\"object\",\"type\":\"AccountType\",\"relationName\":\"AccountTypeToOrganization\"},{\"name\":\"mpesaPaymentRequests\",\"kind\":\"object\",\"type\":\"MpesaPaymentRequest\",\"relationName\":\"MpesaPaymentRequestToOrganization\"},{\"name\":\"attendanceLogs\",\"kind\":\"object\",\"type\":\"AttendanceLog\",\"relationName\":\"AttendanceLogToOrganization\"},{\"name\":\"taxes\",\"kind\":\"object\",\"type\":\"Tax\",\"relationName\":\"OrganizationToTax\"},{\"name\":\"channels\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"ChannelToOrganization\"},{\"name\":\"customRoles\",\"kind\":\"object\",\"type\":\"CustomRole\",\"relationName\":\"CustomRoleToOrganization\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"OrganizationToReport\"},{\"name\":\"backups\",\"kind\":\"object\",\"type\":\"Backup\",\"relationName\":\"BackupToOrganization\"},{\"name\":\"Subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"referrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"OrganizationToReferral\"},{\"name\":\"loyaltyProgram\",\"kind\":\"object\",\"type\":\"LoyaltyProgram\",\"relationName\":\"LoyaltyProgramToOrganization\"},{\"name\":\"loyaltyPointsConfigs\",\"kind\":\"object\",\"type\":\"LoyaltyPointsConfig\",\"relationName\":\"LoyaltyPointsConfigToOrganization\"},{\"name\":\"referralPrograms\",\"kind\":\"object\",\"type\":\"ReferralProgram\",\"relationName\":\"OrganizationToReferralProgram\"},{\"name\":\"drivers\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DriverToOrganization\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"OrganizationToVehicle\"},{\"name\":\"deliveries\",\"kind\":\"object\",\"type\":\"Delivery\",\"relationName\":\"DeliveryToOrganization\"}],\"dbName\":\"organization\"},\"Member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberToUser\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"MemberRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToMember\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"MemberToSale\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"MemberToPurchase\"},{\"name\":\"purchasePayments\",\"kind\":\"object\",\"type\":\"PurchasePayment\",\"relationName\":\"MemberToPurchasePayment\"},{\"name\":\"stockAdjustments\",\"kind\":\"object\",\"type\":\"StockAdjustment\",\"relationName\":\"MemberToStockAdjustment\"},{\"name\":\"stockMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"MemberToStockMovement\"},{\"name\":\"loyaltyTransactions\",\"kind\":\"object\",\"type\":\"LoyaltyTransaction\",\"relationName\":\"LoyaltyTransactionToMember\"},{\"name\":\"cashDrawers\",\"kind\":\"object\",\"type\":\"CashDrawer\",\"relationName\":\"CashDrawerToMember\"},{\"name\":\"inventoryManagements\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"LocationManager\"},{\"name\":\"createdCustomers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerCreatedBy\"},{\"name\":\"updatedCustomers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerUpdatedBy\"},{\"name\":\"uploadedAttachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToMember\"},{\"name\":\"processedReturns\",\"kind\":\"object\",\"type\":\"Return\",\"relationName\":\"MemberToReturn\"},{\"name\":\"expenseApprovals\",\"kind\":\"object\",\"type\":\"ExpenseApproval\",\"relationName\":\"ApproverMember\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"MemberToNotification\"},{\"name\":\"approvalStepConditions\",\"kind\":\"object\",\"type\":\"ApprovalStepCondition\",\"relationName\":\"LocationConditions\"},{\"name\":\"approvalStepActions\",\"kind\":\"object\",\"type\":\"ApprovalStepAction\",\"relationName\":\"ApprovalStepActionMember\"},{\"name\":\"headedDepartments\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentHead\"},{\"name\":\"submittedExpenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseSubmitter\"},{\"name\":\"approvedExpenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseApprover\"},{\"name\":\"createdBudgets\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToMember\"},{\"name\":\"createdRecurringExpenses\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"MemberToRecurringExpense\"},{\"name\":\"generatedBudgetReports\",\"kind\":\"object\",\"type\":\"BudgetReport\",\"relationName\":\"BudgetReportToMember\"},{\"name\":\"cardId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mpesaPaymentRequests\",\"kind\":\"object\",\"type\":\"MpesaPaymentRequest\",\"relationName\":\"MemberToMpesaPaymentRequest\"},{\"name\":\"departmentMemberships\",\"kind\":\"object\",\"type\":\"DepartmentMember\",\"relationName\":\"DepartmentMemberToMember\"},{\"name\":\"isCheckedIn\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastCheckInTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentCheckInLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentCheckInLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToMember\"},{\"name\":\"currentAttendanceLogId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentAttendanceLog\",\"kind\":\"object\",\"type\":\"AttendanceLog\",\"relationName\":\"ActiveCheckIn\"},{\"name\":\"attendanceLogs\",\"kind\":\"object\",\"type\":\"AttendanceLog\",\"relationName\":\"AttendanceLogToMember\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"MemberToOrder\"},{\"name\":\"isGuest\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"guestExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MemberToMessage\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"Reaction\",\"relationName\":\"MemberToReaction\"},{\"name\":\"mentions\",\"kind\":\"object\",\"type\":\"Mention\",\"relationName\":\"MemberToMention\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToMember\"},{\"name\":\"channels\",\"kind\":\"object\",\"type\":\"ChannelMember\",\"relationName\":\"ChannelMemberToMember\"},{\"name\":\"createdChannels\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"ChannelCreator\"},{\"name\":\"assistantMessages\",\"kind\":\"object\",\"type\":\"AssistantMessage\",\"relationName\":\"AssistantMessageToMember\"},{\"name\":\"customRoles\",\"kind\":\"object\",\"type\":\"CustomRole\",\"relationName\":\"MemberCustomRoles\"},{\"name\":\"generatedReports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"MemberToReport\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DriverToMember\"}],\"dbName\":\"member\"},\"SystemUnit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"UnitType\"},{\"name\":\"conversionsFrom\",\"kind\":\"object\",\"type\":\"UnitConversion\",\"relationName\":\"FromUnit\"},{\"name\":\"conversionsTo\",\"kind\":\"object\",\"type\":\"UnitConversion\",\"relationName\":\"ToUnit\"},{\"name\":\"productVariantBaseUnits\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"PVBaseUnit\"},{\"name\":\"productVariantStockingUnits\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"PVStockingUnit\"},{\"name\":\"variantSellingUnits\",\"kind\":\"object\",\"type\":\"VariantSellingUnit\",\"relationName\":\"SystemUnitToVariantSellingUnit\"},{\"name\":\"purchaseItemOrderUnits\",\"kind\":\"object\",\"type\":\"PurchaseItem\",\"relationName\":\"PIOrderUnit\"},{\"name\":\"saleItemSellingUnits\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"SISellingUnit\"}],\"dbName\":\"system_unit\"},\"UnitConversion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromUnit\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"FromUnit\"},{\"name\":\"toUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toUnit\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"ToUnit\"},{\"name\":\"factor\",\"kind\":\"scalar\",\"type\":\"Decimal\"}],\"dbName\":\"unit_conversion\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"MemberRole\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"ChannelToInvitation\"},{\"name\":\"isGuestInvite\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":\"invitation\"},\"Department\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"DepartmentToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"headId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"head\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"DepartmentHead\"},{\"name\":\"departmentMembers\",\"kind\":\"object\",\"type\":\"DepartmentMember\",\"relationName\":\"DepartmentToDepartmentMember\"},{\"name\":\"activeBudgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeBudget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"DepartmentBudget\"},{\"name\":\"budgets\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"DepartmentBudgets\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"department\"},\"Backup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"BackupToOrganization\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BackupStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"backups\"},\"DepartmentMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToDepartmentMember\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"DepartmentMemberToMember\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"DepartmentMemberRole\"},{\"name\":\"canApproveExpenses\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canManageBudget\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"department_member\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToSubcategory\"},{\"name\":\"subcategories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToSubcategory\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CategoryToOrganization\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"imageUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pointsOnPurchase\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"length\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dimensionUnit\",\"kind\":\"enum\",\"type\":\"MeasurementUnit\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weightUnit\",\"kind\":\"enum\",\"type\":\"MeasurementUnit\"},{\"name\":\"volumetricWeight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lowStockThreshold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isNew\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"detailedDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"defaultLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"ProductDefaultLocation\"},{\"name\":\"loyaltyPointsOverride\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"variantStock\",\"kind\":\"object\",\"type\":\"ProductVariantStock\",\"relationName\":\"ProductToProductVariantStock\"},{\"name\":\"suppliers\",\"kind\":\"object\",\"type\":\"ProductSupplier\",\"relationName\":\"ProductToProductSupplier\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProduct\"}],\"dbName\":null},\"ProductVariant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reorderPoint\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reorderQty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lowStockAlert\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"buyingPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"wholesalePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"retailPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProductVariant\"},{\"name\":\"isPopular\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isNew\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"promotionalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"saleItems\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"ProductVariantToSaleItem\"},{\"name\":\"purchaseItems\",\"kind\":\"object\",\"type\":\"PurchaseItem\",\"relationName\":\"ProductVariantToPurchaseItem\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"ProductVariantToStockBatch\"},{\"name\":\"stockAdjustments\",\"kind\":\"object\",\"type\":\"StockAdjustment\",\"relationName\":\"ProductVariantToStockAdjustment\"},{\"name\":\"stockMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"ProductVariantToStockMovement\"},{\"name\":\"variantStocks\",\"kind\":\"object\",\"type\":\"ProductVariantStock\",\"relationName\":\"ProductVariantToProductVariantStock\"},{\"name\":\"suppliers\",\"kind\":\"object\",\"type\":\"ProductSupplier\",\"relationName\":\"ProductSupplierToProductVariant\"},{\"name\":\"pointsOnPurchase\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loyaltyPointsOverride\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"baseUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseUnit\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"PVBaseUnit\"},{\"name\":\"stockingUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stockingUnit\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"PVStockingUnit\"},{\"name\":\"sellingUnits\",\"kind\":\"object\",\"type\":\"VariantSellingUnit\",\"relationName\":\"ProductVariantToVariantSellingUnit\"}],\"dbName\":null},\"VariantSellingUnit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToVariantSellingUnit\"},{\"name\":\"unitOfMeasureId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitOfMeasure\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"SystemUnitToVariantSellingUnit\"},{\"name\":\"retailPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"wholesalePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"}],\"dbName\":\"variant_selling_unit\"},\"Supplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"SupplierType\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registrationNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customBadges\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskLevel\",\"kind\":\"enum\",\"type\":\"RiskLevel\"},{\"name\":\"primaryContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSupplier\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"ProductSupplier\",\"relationName\":\"ProductSupplierToSupplier\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PurchaseToSupplier\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToSupplier\"},{\"name\":\"recurringExpenses\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"RecurringExpenseToSupplier\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"StockBatchToSupplier\"}],\"dbName\":null},\"ProductSupplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductSupplier\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductSupplierToProductVariant\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"ProductSupplierToSupplier\"},{\"name\":\"supplierSku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"costPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"minimumOrderQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"packagingUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPreferred\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"loyaltyPoints\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creationType\",\"kind\":\"enum\",\"type\":\"CustomerCreationType\"},{\"name\":\"loyaltyTierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"loyaltyTier\",\"kind\":\"object\",\"type\":\"LoyaltyTier\",\"relationName\":\"CustomerToLoyaltyTier\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CustomerToOrganization\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"CustomerToSale\"},{\"name\":\"loyaltyTransactions\",\"kind\":\"object\",\"type\":\"LoyaltyTransaction\",\"relationName\":\"CustomerToLoyaltyTransaction\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"CustomerCreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"CustomerUpdatedBy\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CustomerToOrder\"}],\"dbName\":null},\"Tax\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToTax\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appliedToSales\",\"kind\":\"object\",\"type\":\"AppliedTax\",\"relationName\":\"AppliedTaxToTax\"}],\"dbName\":\"tax\"},\"AppliedTax\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"AppliedTaxToSale\"},{\"name\":\"taxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tax\",\"kind\":\"object\",\"type\":\"Tax\",\"relationName\":\"AppliedTaxToTax\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"applied_tax\"},\"Sale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToSale\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToSale\"},{\"name\":\"saleDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"finalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"amountReceived\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"change\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToSale\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cashDrawerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cashDrawer\",\"kind\":\"object\",\"type\":\"CashDrawer\",\"relationName\":\"CashDrawerToSale\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToSale\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"SaleToSaleItem\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToSale\"},{\"name\":\"loyaltyTransaction\",\"kind\":\"object\",\"type\":\"LoyaltyTransaction\",\"relationName\":\"LoyaltyTransactionToSale\"},{\"name\":\"returns\",\"kind\":\"object\",\"type\":\"Return\",\"relationName\":\"ReturnToSale\"},{\"name\":\"appliedTaxes\",\"kind\":\"object\",\"type\":\"AppliedTax\",\"relationName\":\"AppliedTaxToSale\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSale\"}],\"dbName\":null},\"SaleItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToSaleItem\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToSaleItem\"},{\"name\":\"stockBatchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stockBatch\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"SaleItemToStockBatch\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"unitCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"returns\",\"kind\":\"object\",\"type\":\"ReturnItem\",\"relationName\":\"ReturnItemToSaleItem\"},{\"name\":\"sellingUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sellingUnit\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"SISellingUnit\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrderToOrganization\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrder\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToOrder\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"orderType\",\"kind\":\"enum\",\"type\":\"OrderType\"},{\"name\":\"fulfillmentType\",\"kind\":\"enum\",\"type\":\"FulfillmentType\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"subTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shippingAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"paymentTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"preparingAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readyAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dispatchedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"billingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"deliveryNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pickupLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pickupLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"OrderPickupLocation\"},{\"name\":\"tableNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedPreparationTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delivery\",\"kind\":\"object\",\"type\":\"Delivery\",\"relationName\":\"DeliveryToOrder\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"OrderToSale\"}],\"dbName\":\"order\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"OrderItemToProductVariant\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"order_item\"},\"Assistant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AssistantToOrganization\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"AssistantType\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"configuration\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"AssistantTask\",\"relationName\":\"AssistantToAssistantTask\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"AssistantLog\",\"relationName\":\"AssistantToAssistantLog\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"AssistantToChannel\"},{\"name\":\"assistantMessages\",\"kind\":\"object\",\"type\":\"AssistantMessage\",\"relationName\":\"AssistantToAssistantMessage\"}],\"dbName\":\"assistant\"},\"AssistantMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isUser\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"AssistantMessageToChannel\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"AssistantMessageToMember\"},{\"name\":\"assistantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistant\",\"kind\":\"object\",\"type\":\"Assistant\",\"relationName\":\"AssistantToAssistantMessage\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"assistant_message\"},\"AssistantTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistant\",\"kind\":\"object\",\"type\":\"Assistant\",\"relationName\":\"AssistantToAssistantTask\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taskType\",\"kind\":\"enum\",\"type\":\"AssistantTaskType\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"AssistantTriggerType\"},{\"name\":\"triggerConfiguration\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"actionConfiguration\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"AssistantLog\",\"relationName\":\"AssistantLogToAssistantTask\"}],\"dbName\":\"assistant_task\"},\"AssistantLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistant\",\"kind\":\"object\",\"type\":\"Assistant\",\"relationName\":\"AssistantToAssistantLog\"},{\"name\":\"assistantTaskId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"task\",\"kind\":\"object\",\"type\":\"AssistantTask\",\"relationName\":\"AssistantLogToAssistantTask\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AssistantLogToOrganization\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AssistantLogStatus\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"output\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"assistant_log\"},\"Purchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"PurchaseToSupplier\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToPurchase\"},{\"name\":\"orderDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expectedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receivedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paidAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PurchaseStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToPurchase\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"PurchaseItem\",\"relationName\":\"PurchaseToPurchaseItem\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"PurchasePayment\",\"relationName\":\"PurchaseToPurchasePayment\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToPurchase\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToPurchase\"}],\"dbName\":null},\"PurchaseItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PurchaseToPurchaseItem\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToPurchaseItem\"},{\"name\":\"orderedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receivedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"PurchaseItemToStockBatch\"},{\"name\":\"orderedUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderedUnit\",\"kind\":\"object\",\"type\":\"SystemUnit\",\"relationName\":\"PIOrderUnit\"}],\"dbName\":null},\"PurchasePayment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PurchaseToPurchasePayment\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToPurchasePayment\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Return\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"returnNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"ReturnToSale\"},{\"name\":\"reason\",\"kind\":\"enum\",\"type\":\"ReturnReason\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReturnStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToReturn\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"ReturnItem\",\"relationName\":\"ReturnToReturnItem\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToReturn\"}],\"dbName\":null},\"ReturnItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"returnId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"return\",\"kind\":\"object\",\"type\":\"Return\",\"relationName\":\"ReturnToReturnItem\"},{\"name\":\"saleItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleItem\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"ReturnItemToSaleItem\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"enum\",\"type\":\"ReturnReason\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReturnItemStatus\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"InventoryLocation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"locationType\",\"kind\":\"enum\",\"type\":\"LocationType\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contact\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"parentLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"LocationHierarchy\"},{\"name\":\"childLocations\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"LocationHierarchy\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"approvalConditions\",\"kind\":\"object\",\"type\":\"ApprovalStepCondition\",\"relationName\":\"LocationCondition\"},{\"name\":\"inventoryConditions\",\"kind\":\"object\",\"type\":\"ApprovalStepCondition\",\"relationName\":\"InventoryLocationConditions\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manager\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"LocationManager\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"InventoryLocationToSale\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InventoryLocationToOrganization\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"InventoryLocationToStockBatch\"},{\"name\":\"stockAdjustments\",\"kind\":\"object\",\"type\":\"StockAdjustment\",\"relationName\":\"InventoryLocationToStockAdjustment\"},{\"name\":\"variantStocks\",\"kind\":\"object\",\"type\":\"ProductVariantStock\",\"relationName\":\"InventoryLocationToProductVariantStock\"},{\"name\":\"outgoingMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"FromLocationMovements\"},{\"name\":\"incomingMovements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"ToLocationMovements\"},{\"name\":\"zones\",\"kind\":\"object\",\"type\":\"StorageZone\",\"relationName\":\"InventoryLocationToStorageZone\"},{\"name\":\"storageUnits\",\"kind\":\"object\",\"type\":\"StorageUnit\",\"relationName\":\"InventoryLocationToStorageUnit\"},{\"name\":\"checkedInMembers\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"InventoryLocationToMember\"},{\"name\":\"checkInAttendanceLogs\",\"kind\":\"object\",\"type\":\"AttendanceLog\",\"relationName\":\"CheckInLocationLogs\"},{\"name\":\"checkOutAttendanceLogs\",\"kind\":\"object\",\"type\":\"AttendanceLog\",\"relationName\":\"CheckOutLocationLogs\"},{\"name\":\"defaultProducts\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductDefaultLocation\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToInventoryLocation\"},{\"name\":\"budgets\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToInventoryLocation\"},{\"name\":\"pickupOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderPickupLocation\"}],\"dbName\":null},\"StorageZone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToStorageZone\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"capacityUnit\",\"kind\":\"enum\",\"type\":\"MeasurementUnit\"},{\"name\":\"capacityUsed\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"storageUnits\",\"kind\":\"object\",\"type\":\"StorageUnit\",\"relationName\":\"StorageUnitToStorageZone\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToStorageZone\"}],\"dbName\":null},\"StorageUnit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitType\",\"kind\":\"enum\",\"type\":\"StorageUnitType\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToStorageUnit\"},{\"name\":\"zoneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zone\",\"kind\":\"object\",\"type\":\"StorageZone\",\"relationName\":\"StorageUnitToStorageZone\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"depth\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dimensionUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxWeight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weightUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"capacityUnit\",\"kind\":\"enum\",\"type\":\"MeasurementUnit\"},{\"name\":\"capacityUsed\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"positions\",\"kind\":\"object\",\"type\":\"StoragePosition\",\"relationName\":\"StoragePositionToStorageUnit\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"UnitStockBatches\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToStorageUnit\"}],\"dbName\":null},\"StoragePosition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storageUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storageUnit\",\"kind\":\"object\",\"type\":\"StorageUnit\",\"relationName\":\"StoragePositionToStorageUnit\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"depth\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dimensionUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxWeight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weightUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isOccupied\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stockBatches\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"PositionStockBatches\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToStoragePosition\"}],\"dbName\":null},\"StockBatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToStockBatch\"},{\"name\":\"batchNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseItem\",\"kind\":\"object\",\"type\":\"PurchaseItem\",\"relationName\":\"PurchaseItemToStockBatch\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToStockBatch\"},{\"name\":\"storageUnitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storageUnit\",\"kind\":\"object\",\"type\":\"StorageUnit\",\"relationName\":\"UnitStockBatches\"},{\"name\":\"positionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"object\",\"type\":\"StoragePosition\",\"relationName\":\"PositionStockBatches\"},{\"name\":\"initialQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchasePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receivedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"spaceOccupied\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"spaceUnit\",\"kind\":\"enum\",\"type\":\"MeasurementUnit\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToStockBatch\"},{\"name\":\"saleItems\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"SaleItemToStockBatch\"},{\"name\":\"adjustments\",\"kind\":\"object\",\"type\":\"StockAdjustment\",\"relationName\":\"StockAdjustmentToStockBatch\"},{\"name\":\"movements\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"StockBatchToStockMovement\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"StockBatchToSupplier\"},{\"name\":\"landedCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"batchSalePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"}],\"dbName\":null},\"ProductVariantStock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariantStock\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToProductVariantStock\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToProductVariantStock\"},{\"name\":\"currentStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reservedStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"availableStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reorderPoint\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reorderQty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProductVariantStock\"}],\"dbName\":null},\"StockAdjustment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToStockAdjustment\"},{\"name\":\"stockBatchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stockBatch\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"StockAdjustmentToStockBatch\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationToStockAdjustment\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToStockAdjustment\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"enum\",\"type\":\"StockAdjustmentReason\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adjustmentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referenceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movement\",\"kind\":\"object\",\"type\":\"StockMovement\",\"relationName\":\"StockAdjustmentToStockMovement\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToStockAdjustment\"}],\"dbName\":null},\"StockMovement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToStockMovement\"},{\"name\":\"stockBatchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stockBatch\",\"kind\":\"object\",\"type\":\"StockBatch\",\"relationName\":\"StockBatchToStockMovement\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fromLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"FromLocationMovements\"},{\"name\":\"toLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"ToLocationMovements\"},{\"name\":\"movementType\",\"kind\":\"enum\",\"type\":\"MovementType\"},{\"name\":\"referenceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referenceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adjustmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adjustment\",\"kind\":\"object\",\"type\":\"StockAdjustment\",\"relationName\":\"StockAdjustmentToStockMovement\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToStockMovement\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movementDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToStockMovement\"}],\"dbName\":null},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeBytes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"AttachmentToMember\"},{\"name\":\"relatedTo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"AttachmentToSale\"},{\"name\":\"purchaseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"AttachmentToPurchase\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AttachmentToOrganization\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"AttachmentToExpense\"},{\"name\":\"budgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recurringExpenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recurringExpense\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"AttachmentToRecurringExpense\"}],\"dbName\":null},\"CashDrawer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"CashDrawerToMember\"},{\"name\":\"openingAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"closingAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expectedAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discrepancy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DrawerStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"CashDrawerToSale\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CashDrawerToOrganization\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AuditLogToOrganization\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"AuditLogToMember\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"AuditLogAction\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"AuditEntityType\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"performedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"AuditLogToExpense\"},{\"name\":\"budgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"AuditLogToBudget\"},{\"name\":\"recurringExpenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recurringExpense\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"AuditLogToRecurringExpense\"},{\"name\":\"expenseApprovalId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"audit_log\"},\"OrganizationSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToOrganizationSettings\"},{\"name\":\"defaultCurrency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultTimezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultTaxRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"inventoryPolicy\",\"kind\":\"enum\",\"type\":\"InventoryPolicy\"},{\"name\":\"lowStockThreshold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"negativeStock\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"enableCapacityTracking\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enforceSpatialConstraints\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableProductDimensions\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"defaultMeasurementUnit\",\"kind\":\"enum\",\"type\":\"MeasurementUnit\"},{\"name\":\"defaultDimensionUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultWeightUnit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultTaxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enableAutoCheckout\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoCheckoutTime\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"organization_settings\"},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expenseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"ExpenseCategory\",\"relationName\":\"ExpenseToExpenseCategory\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isReimbursable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExpenseStatus\"},{\"name\":\"approvalDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"ExpenseToInventoryLocation\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ExpenseSubmitter\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ExpenseApprover\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"ExpenseToSupplier\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExpenseToOrganization\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToExpense\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToExpense\"},{\"name\":\"purchaseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"ExpenseToPurchase\"},{\"name\":\"budgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToExpense\"},{\"name\":\"approval\",\"kind\":\"object\",\"type\":\"ExpenseApproval\",\"relationName\":\"ExpenseApproval\"},{\"name\":\"recurringExpenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recurringExpense\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"RecurringExpenseExpenses\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"mileage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isBillable\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"ExpenseCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requiresApproval\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"defaultBudget\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExpenseCategoryToOrganization\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToExpenseCategory\"},{\"name\":\"recurringExpenses\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"ExpenseCategoryToRecurringExpense\"},{\"name\":\"approvalConditions\",\"kind\":\"object\",\"type\":\"ApprovalStepCondition\",\"relationName\":\"ApprovalStepConditionToExpenseCategory\"}],\"dbName\":null},\"RecurringExpense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"ExpenseCategory\",\"relationName\":\"ExpenseCategoryToRecurringExpense\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"frequency\",\"kind\":\"enum\",\"type\":\"RecurrenceFrequency\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"nextDueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"supplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"RecurringExpenseToSupplier\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToRecurringExpense\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToRecurringExpense\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"RecurringExpenseExpenses\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToRecurringExpense\"},{\"name\":\"executionLog\",\"kind\":\"object\",\"type\":\"ExecutionLog\",\"relationName\":\"ExecutionLogToRecurringExpense\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToRecurringExpense\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ExpenseApproval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseApproval\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ApproverMember\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"decisionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExpenseApprovalToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ApprovalWorkflow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrgWorkflows\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"steps\",\"kind\":\"object\",\"type\":\"ApprovalWorkflowStep\",\"relationName\":\"ApprovalWorkflowToApprovalWorkflowStep\"},{\"name\":\"activeForOrganizations\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ActiveOrgWorkflow\"},{\"name\":\"expenseApprovalOrganizations\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExpenseApprovalWorkflows\"}],\"dbName\":null},\"ApprovalWorkflowStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvalWorkflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"ApprovalWorkflow\",\"relationName\":\"ApprovalWorkflowToApprovalWorkflowStep\"},{\"name\":\"stepNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allConditionsMustMatch\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"conditions\",\"kind\":\"object\",\"type\":\"ApprovalStepCondition\",\"relationName\":\"ApprovalStepConditionToApprovalWorkflowStep\"},{\"name\":\"actions\",\"kind\":\"object\",\"type\":\"ApprovalStepAction\",\"relationName\":\"ApprovalStepActionToApprovalWorkflowStep\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ApprovalStepCondition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"step\",\"kind\":\"object\",\"type\":\"ApprovalWorkflowStep\",\"relationName\":\"ApprovalStepConditionToApprovalWorkflowStep\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ConditionType\"},{\"name\":\"minAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"LocationCondition\"},{\"name\":\"expenseCategoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseCategory\",\"kind\":\"object\",\"type\":\"ExpenseCategory\",\"relationName\":\"ApprovalStepConditionToExpenseCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"LocationConditions\"},{\"name\":\"inventoryLocations\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"InventoryLocationConditions\"}],\"dbName\":null},\"ApprovalStepAction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"step\",\"kind\":\"object\",\"type\":\"ApprovalWorkflowStep\",\"relationName\":\"ApprovalStepActionToApprovalWorkflowStep\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ApprovalActionType\"},{\"name\":\"approverRole\",\"kind\":\"enum\",\"type\":\"MemberRole\"},{\"name\":\"specificMemberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specificMember\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ApprovalStepActionMember\"},{\"name\":\"approvalMode\",\"kind\":\"enum\",\"type\":\"ApprovalMode\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Budget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"BudgetToInventoryLocation\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"BudgetToOrganization\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"BudgetToMember\"},{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentBudgets\"},{\"name\":\"activeForDepartment\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentBudget\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"BudgetToExpense\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToBudget\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fiscalYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"variance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"BudgetReport\",\"relationName\":\"BudgetToBudgetReport\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"BudgetAlert\",\"relationName\":\"BudgetToBudgetAlert\"}],\"dbName\":null},\"BudgetReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToBudgetReport\"},{\"name\":\"reportDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"remaining\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"variance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generatedBy\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"BudgetReportToMember\"}],\"dbName\":null},\"BudgetAlert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToBudgetAlert\"},{\"name\":\"threshold\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"BudgetAlertToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ExecutionLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExecutionStatus\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExecutionLogToOrganization\"},{\"name\":\"recurringExpenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recurringExpense\",\"kind\":\"object\",\"type\":\"RecurringExpense\",\"relationName\":\"ExecutionLogToRecurringExpense\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToNotification\"},{\"name\":\"expenseUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userExpense\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserExpenseNotifications\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"NotificationToOrganization\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"MpesaPaymentRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkoutRequestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"merchantRequestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resultCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resultDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mpesaReceiptNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"saleData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"saleNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MpesaPaymentRequestToOrganization\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToMpesaPaymentRequest\"}],\"dbName\":null},\"AttendanceLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"AttendanceLogToMember\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AttendanceLogToOrganization\"},{\"name\":\"checkInTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkOutTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkInLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkInLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"CheckInLocationLogs\"},{\"name\":\"checkOutLocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkOutLocation\",\"kind\":\"object\",\"type\":\"InventoryLocation\",\"relationName\":\"CheckOutLocationLogs\"},{\"name\":\"durationMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAutoCheckout\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"activeMemberCheckIn\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ActiveCheckIn\"}],\"dbName\":\"attendance_log\"},\"Apikey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prefix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApikeyToUser\"},{\"name\":\"refillInterval\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refillAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastRefillAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rateLimitEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rateLimitTimeWindow\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rateLimitMax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remaining\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastRequest\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"apikey\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeOrganizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"CustomRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CustomRoleToOrganization\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberCustomRoles\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isSystemRole\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"custom_role\"},\"RoleTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"role_template\"},\"Channel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ChannelType\"},{\"name\":\"isGeneral\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isAssistantChannel\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ChannelCreator\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ChannelToMessage\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"SubChannels\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subChannels\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"SubChannels\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"ChannelMember\",\"relationName\":\"ChannelMembers\"},{\"name\":\"favoriteFor\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"ChannelToFavorite\"},{\"name\":\"linkedThreads\",\"kind\":\"object\",\"type\":\"ThreadLink\",\"relationName\":\"SourceThread\"},{\"name\":\"linkedByThreads\",\"kind\":\"object\",\"type\":\"ThreadLink\",\"relationName\":\"TargetThread\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ChannelToOrganization\"},{\"name\":\"assistantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assistant\",\"kind\":\"object\",\"type\":\"Assistant\",\"relationName\":\"AssistantToChannel\"},{\"name\":\"assistantMessages\",\"kind\":\"object\",\"type\":\"AssistantMessage\",\"relationName\":\"AssistantMessageToChannel\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"ChannelToInvitation\"}],\"dbName\":null},\"ChannelMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"ChannelMemberToMember\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"ChannelMembers\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToMessage\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"ChannelToMessage\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"Reaction\",\"relationName\":\"MessageToReaction\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"ChatMessageAttachment\",\"relationName\":\"ChatMessageAttachmentToMessage\"},{\"name\":\"mentions\",\"kind\":\"object\",\"type\":\"Mention\",\"relationName\":\"MentionToMessage\"},{\"name\":\"hashtags\",\"kind\":\"object\",\"type\":\"Hashtag\",\"relationName\":\"HashtagToMessage\"},{\"name\":\"parentMessage\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"Thread\"},{\"name\":\"parentMessageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"Thread\"}],\"dbName\":null},\"Reaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emoji\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToReaction\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToReaction\"}],\"dbName\":null},\"ChatMessageAttachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ChatMessageAttachmentToMessage\"}],\"dbName\":\"chat_message_attachment\"},\"Mention\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MentionToMessage\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToMention\"}],\"dbName\":null},\"Hashtag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"HashtagToMessage\"}],\"dbName\":null},\"Favorite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"FavoriteToMember\"},{\"name\":\"channel\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"ChannelToFavorite\"}],\"dbName\":null},\"ThreadLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceThreadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetThreadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceThread\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"SourceThread\"},{\"name\":\"targetThread\",\"kind\":\"object\",\"type\":\"Channel\",\"relationName\":\"TargetThread\"}],\"dbName\":null},\"AccountType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AccountTypeToOrganization\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"class\",\"kind\":\"enum\",\"type\":\"AccountClass\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"FinancialAccount\",\"relationName\":\"AccountTypeToFinancialAccount\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account_types\"},\"FinancialAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"FinancialAccountToOrganization\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"object\",\"type\":\"AccountType\",\"relationName\":\"AccountTypeToFinancialAccount\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"FinancialAccount\",\"relationName\":\"AccountHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"FinancialAccount\",\"relationName\":\"AccountHierarchy\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"currencyCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isControlAccount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"journalEntries\",\"kind\":\"object\",\"type\":\"JournalEntry\",\"relationName\":\"FinancialAccountToJournalEntry\"},{\"name\":\"reconciliations\",\"kind\":\"object\",\"type\":\"AccountReconciliation\",\"relationName\":\"AccountReconciliationToFinancialAccount\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"accounts\"},\"FiscalPeriod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"FiscalPeriodToOrganization\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PeriodStatus\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PeriodType\"},{\"name\":\"journals\",\"kind\":\"object\",\"type\":\"Journal\",\"relationName\":\"FiscalPeriodToJournal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"fiscal_periods\"},\"Journal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"JournalToOrganization\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"postingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"JournalType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"JournalStatus\"},{\"name\":\"fiscalPeriodId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fiscalPeriod\",\"kind\":\"object\",\"type\":\"FiscalPeriod\",\"relationName\":\"FiscalPeriodToJournal\"},{\"name\":\"currencyCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entries\",\"kind\":\"object\",\"type\":\"JournalEntry\",\"relationName\":\"JournalToJournalEntry\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"journals\"},\"JournalEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"journalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"journal\",\"kind\":\"object\",\"type\":\"Journal\",\"relationName\":\"JournalToJournalEntry\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"FinancialAccount\",\"relationName\":\"FinancialAccountToJournalEntry\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"EntryType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lineNumber\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"journal_entries\"},\"AccountReconciliation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"FinancialAccount\",\"relationName\":\"AccountReconciliationToFinancialAccount\"},{\"name\":\"statementDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"statementBalance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"bookBalance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReconciliationStatus\"},{\"name\":\"reconciledBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reconciledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account_reconciliations\"},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToReport\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ReportType\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"generatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"generatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generatedBy\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToReport\"}],\"dbName\":\"reports\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"dodoCustomerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"dodo_customer_id\"},{\"name\":\"dodoSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"dodo_subscription_id\"},{\"name\":\"dodoPriceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"dodo_price_id\"},{\"name\":\"dodoCurrentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"dodo_current_period_end\"}],\"dbName\":\"subscriptions\"},\"Jwks\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"privateKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"jwks\"},\"ReferralProgram\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToReferralProgram\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"referrerReward\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refereeReward\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rewardType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"ReferralToReferralProgram\"}],\"dbName\":\"referral_program\"},\"Referral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToReferral\"},{\"name\":\"referrerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferredBy\"},{\"name\":\"refereeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferredUser\"},{\"name\":\"programId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program\",\"kind\":\"object\",\"type\":\"ReferralProgram\",\"relationName\":\"ReferralToReferralProgram\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstPurchaseMade\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rewardApplied\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"referral\"},\"LoyaltyPointsConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"LoyaltyPointsConfigToOrganization\"},{\"name\":\"actionType\",\"kind\":\"enum\",\"type\":\"LoyaltyActionType\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"loyalty_points_config\"},\"LoyaltyProgram\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"LoyaltyProgramToOrganization\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pointsPerDollar\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"redemptionRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tiers\",\"kind\":\"object\",\"type\":\"LoyaltyTier\",\"relationName\":\"LoyaltyProgramToLoyaltyTier\"}],\"dbName\":\"loyalty_program\"},\"LoyaltyTier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"programId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"program\",\"kind\":\"object\",\"type\":\"LoyaltyProgram\",\"relationName\":\"LoyaltyProgramToLoyaltyTier\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minPoints\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pointMultiplier\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToLoyaltyTier\"}],\"dbName\":\"loyalty_tier\"},\"LoyaltyTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToLoyaltyTransaction\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"LoyaltyTransactionToMember\"},{\"name\":\"pointsChange\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actionType\",\"kind\":\"enum\",\"type\":\"LoyaltyActionType\"},{\"name\":\"relatedSaleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedSale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"LoyaltyTransactionToSale\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"LoyaltyTransactionToOrganization\"}],\"dbName\":null},\"Driver\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"DriverToOrganization\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"DriverToMember\"},{\"name\":\"availability\",\"kind\":\"enum\",\"type\":\"DriverStatus\"},{\"name\":\"currentLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"DriverToVehicle\"},{\"name\":\"deliveries\",\"kind\":\"object\",\"type\":\"Delivery\",\"relationName\":\"DeliveryToDriver\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"driver\"},\"Vehicle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToVehicle\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DriverToVehicle\"},{\"name\":\"make\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licensePlate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"VehicleType\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"vehicle\"},\"Delivery\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"DeliveryToOrganization\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"DeliveryToOrder\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"Driver\",\"relationName\":\"DeliveryToDriver\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DeliveryStatus\"},{\"name\":\"pickupAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"deliveryAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pickedUpAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estimatedDeliveryTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"driverNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"delivery\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

